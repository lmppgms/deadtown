<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_sys</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inven_type = global.inven_weapon
pointer = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_player)
{
    if 0 &lt;= pointer
    {
        if db_info_get(inven_type,obj_player.weapon_pointer,4) &lt;= 5 // only for gun / return the bullet in the gun
        {
            if obj_player.weapon_ammo_type == 1
            {
                global.item_ammo_normal += obj_player.weapon_ammo_count
            }
            if obj_player.weapon_ammo_type == 2
            {
                global.item_ammo_shotgun += obj_player.weapon_ammo_count
            }
            if obj_player.weapon_ammo_type == 3
            {
                global.item_ammo_machinegun += obj_player.weapon_ammo_count
            }
        }
        obj_player.weapon_ammo_count = 0
        
        obj_player.weapon_pointer = pointer;
        obj_player.weapon_sprite = db_info_get(inven_type,pointer,2)
        obj_player.weapon_reload_time_count = 0
        obj_player.weapon_relaunch_time_count = 0
        obj_player.scope_time = 0
        
        switch(db_info_get(inven_type,pointer,4))
        {
            case 1: //rifle
                obj_player.weapon_kind = 1
                obj_player.weapon_bull_number = 1
                obj_player.weapon_ammo_type = 1
            break;
            
            case 2: //pistol
                obj_player.weapon_kind = 1
                obj_player.weapon_bull_number = 1
                obj_player.weapon_ammo_type = 1
            break;
            
            case 3: //machinegun
                obj_player.weapon_kind = 1
                obj_player.weapon_bull_number = 1
                obj_player.weapon_ammo_type = 3
            break;
            
            case 4: //shotgun
                obj_player.weapon_kind = 1
                obj_player.weapon_bull_number = 5
                obj_player.weapon_ammo_type = 2
            break;
            
            case 5: //sniper
                obj_player.weapon_kind = 2
                obj_player.weapon_bull_number = 1
                obj_player.weapon_ammo_type = 1
            break;
            
            case 6: //bow
                obj_player.weapon_kind = 1
                obj_player.weapon_bull_number = 1
                obj_player.weapon_ammo_type = 4
            break;
            
            case 7: //near
                obj_player.weapon_kind = 3
                obj_player.weapon_bull_number = 1
                obj_player.weapon_ammo_type = 1
            break;
            
            case 8: //etc
                obj_player.weapon_kind = 1
                obj_player.weapon_bull_number = 1
                obj_player.weapon_ammo_type = 1 // change here
            break;
        }
        
        obj_player.weapon_damage = db_info_get(inven_type,pointer,5)
        obj_player.weapon_relaunch_time = db_info_get(inven_type,pointer,6)
        obj_player.weapon_reaction = db_info_get(inven_type,pointer,7)
        obj_player.weapon_ammo_number = db_info_get(inven_type,pointer,8)
        obj_player.weapon_reload_time = db_info_get(inven_type,pointer,9)
        obj_player.weapon_action_able = db_info_get(inven_type,pointer,10)
        
        obj_player.weapon_angle_range_basic = db_info_get(inven_type,pointer,11)
        obj_player.weapon_range = db_info_get(inven_type,pointer,12)
        
        obj_player.weapon_angle_range_knife = db_info_get(inven_type,pointer,11)
        obj_player.weapon_angle_speed = db_info_get(inven_type,pointer,12)
        
        obj_player.weapon_angle = -obj_player.weapon_angle_range_knife
        
    }
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
