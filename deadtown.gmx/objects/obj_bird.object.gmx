<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bird</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-60</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fly = 0
fly_return = 0

fly_attack = 0

refly_count = 0
refly_count_max = 60

bird_type = 2

angle_speed = 3
angle = 0

move_speed = 8
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// audio
audio_init()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// audio
audio_free()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_player)
{
    if fly
    {
        go_ins = obj_player
        
        if fly_return == 0
        {
            if instance_exists(obj_item_building)
            {go_ins = instance_nearest(x,y,obj_item_building)}
            if instance_exists(obj_item)
            {go_ins = instance_nearest(x,y,obj_item)}
            
            if fly_attack == 1
            {
                if instance_exists(par_zombie)
                {
                    go_ins = instance_nearest(x,y,par_zombie)
                }
            }
        }
        
        go_dir = 0
        if angle_difference(angle,point_direction(x,y,go_ins.x,go_ins.y))&lt;0
        {go_dir = angle_speed}
        if angle_difference(angle,point_direction(x,y,go_ins.x,go_ins.y))&gt;0
        {go_dir = -angle_speed}
        if abs(angle_difference(angle,point_direction(x,y,go_ins.x,go_ins.y))) &lt; angle_speed
        {go_dir = point_direction(x,y,go_ins.x,go_ins.y)-angle}
        angle += go_dir
        x += lengthdir_x(move_speed,angle)
        y += lengthdir_y(move_speed,angle)
        
        if go_ins == obj_player
        {
            if point_distance(x,y,obj_player.x,obj_player.y) &lt; 20
            {
                fly = 0
                refly_count = 0
            }
        }
        if fly_attack == 1
        {
            if instance_exists(par_zombie)
            {
                go_ins = instance_nearest(x,y,par_zombie)
                if point_distance(x,y,go_ins.x,go_ins.y) &lt; 20
                {
                    audio_play(snd_bird)
                    
                    go_ins.attacked = 1
                    go_ins.alarm[0] = go_ins.attacked_delay
                    go_ins.hp -= 20
                    
                    go_ins.stunned = 1
                    go_ins.alarm[1] = go_ins.stunned_time
                    
                    go_ins.outline = 1
                    go_ins.alarm[3] = go_ins.outline_time
                    
                    fly_attack = 0
                    
                    particle_burst(sys_particle.p_part_blood,go_ins.x,go_ins.y,sys_view.view_a+180,20,2)
                    particle_burst_up(sys_particle.p_part_blood_up,go_ins.x,go_ins.y,sys_view.view_a+180,20,2)
                }
            }
        }
    }
    else
    {
        refly_count += 1
        if refly_count_max &lt; refly_count
        {
            if instance_exists(obj_item) or instance_exists(obj_item_building) or instance_exists(obj_parcel)
            {
                audio_play(snd_bird)
                fly = 1
                fly_return = 0
                if bird_type == 2
                {
                    fly_attack = 1
                }
            }
        }
        
        x = obj_player.x + lengthdir_x(20*global.char_aspect,180+sys_view.view_a+obj_player.feet_angle/4)
        y = obj_player.y + lengthdir_y(20*global.char_aspect,180+sys_view.view_a+obj_player.feet_angle/4)
        angle = sys_view.view_a+obj_player.feet_angle/4+90
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///audio
audio_update()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_player)
{
    if fly
    {
        if 6 &lt; sys_spawn_time_light.day_time and sys_spawn_time_light.day_time &lt; 18 
        {
            xx = x + lengthdir_x(24,sys_spawn_time_light.day_time/24*360-180-45)
            yy = y + lengthdir_y(24,sys_spawn_time_light.day_time/24*360-180-45)
        }
        else
        {
            dir = point_direction(obj_player.x, obj_player.y, x, y)
            
            xx = x + lengthdir_x(20,dir)
            yy = y + lengthdir_y(20,dir)
        }
        draw_sprite_ext(spr_bird,bird_type*2+fly,xx,yy,1,1,angle,c_black,0.5)
    }
    draw_sprite_ext(spr_bird,bird_type*2+fly,x,y,1,1,angle,c_white,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
