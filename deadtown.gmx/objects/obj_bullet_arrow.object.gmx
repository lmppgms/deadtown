<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_arrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>mask_arrow</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 600
alarm[1] = 30
alarm[2] = 2
angle = 0
bull_speed = 25
if rpg_skill_get_level(6)
{bull_speed = 40}
bull_speed_friction = 0.2

launched = 1

owner_id = noone

owner_dis = 0
owner_dir = 0

owner_angle = 0
my_angle = 0

visible = false

image_xscale = 1.2
image_yscale = 1.2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visible = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>launched = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if owner_id != noone
{
    if instance_exists(owner_id)
    {
        dir = (owner_id.my_angle_slow - owner_angle)+owner_dir
        
        x = owner_id.x + lengthdir_x(owner_dis,dir)
        y = owner_id.y + lengthdir_y(owner_dis,dir)
        angle = my_angle + (owner_id.my_angle_slow - owner_angle)
    }
}

image_angle = angle+90

xx = lengthdir_x(bull_speed,angle+90)
yy = lengthdir_y(bull_speed,angle+90)

if bull_speed_friction &lt; bull_speed
{
    bull_speed -= bull_speed_friction
}

x += xx
y += yy

if range &lt; point_distance(x,y,xstart,ystart)
{
    bull_speed = 0
}

if launched == 0
{
    if point_distance(x,y,obj_player.x,obj_player.y)&lt; global.item_get_distance+20
    {
        global.item_ammo_arrow += 1
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// boss1
if instance_exists(obj_boss1)
{
    for(i=0; i&lt;obj_boss1.body_number; i+=2 ) /// every 2 blocks
    {
        dir = point_direction(obj_boss1.body_x[i+1],obj_boss1.body_y[i+1],obj_boss1.body_x[i],obj_boss1.body_y[i])
        
        xx = obj_boss1.body_x[i+1] + lengthdir_x(obj_boss1.move_position,dir)
        yy = obj_boss1.body_y[i+1] + lengthdir_y(obj_boss1.move_position,dir)
        
        if point_distance(xx,yy,x_search,y_search) &lt; obj_boss1.body_width/2
        {
            obj_boss1.hp -= damage_cal(damage)
            instance_destroy()
            break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_zombie">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if 0 &lt; bull_speed
{
    if (other.attacked == 0)
    {
        achievement_plus(3)
        bull_speed = 0
        
        other.hp -= damage_cal(damage)
        
        with(obj_player){audio_play(snd_weapon_hit2)}
        
        other.attacked = 1
        other.alarm[0] = other.attacked_delay
        
        other.stunned = 1
        other.alarm[1] = other.stunned_time
        
        other.outline = 1
        other.alarm[3] = other.outline_time
                
        other.reaction_speed += 1
        other.reaction_direction = point_direction(obj_player.x, obj_player.y, other.x, other.y)
        
        if !other.detect
        {
            other.detect = 1
            other.detect_show = 1
            other.alarm[4] = other.detect_show_time
        }
        
        particle_burst(sys_particle.p_part_blood,x,y,angle+90,10,1)
        particle_burst_up(sys_particle.p_part_blood_up,x,y,angle+90,10,1)
        
        particle_burst_up_out(sys_particle.p_part_blood_up_out,x,y,angle,0,1)
        
        owner_id = other.id
        
        owner_dis = point_distance(other.x,other.y,x,y)/2
        owner_dir = point_direction(other.x,other.y,x,y)
        
        owner_angle = other.my_angle_slow
        my_angle = angle
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bull_speed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
