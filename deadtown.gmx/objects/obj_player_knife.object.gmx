<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_knife</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>attack_count = 0
attack_count_max = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = obj_player.x
y = obj_player.y

if (obj_player.weapon_kind == 3)
{
    sprite_index = obj_player.weapon_sprite
    mask_index = obj_player.weapon_sprite
    
    if obj_player.weapon_launched or (obj_player.weapon_pointer == obj_player.chain_saw_index)
    {
        image_angle = obj_player.weapon_angle+90+sys_view.view_a
        direction = obj_player.weapon_angle+90+sys_view.view_a
    }
    else
    {
        x = obj_player.x + lengthdir_x(15*global.char_aspect,60+sys_view.view_a+obj_player.feet_angle/4)
        y = obj_player.y + lengthdir_y(15*global.char_aspect,60+sys_view.view_a+obj_player.feet_angle/4)
        image_angle = sys_view.view_a-100+obj_player.feet_angle/4
        direction = sys_view.view_a-100+obj_player.feet_angle/4
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_zombie">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (obj_player.weapon_kind == 3)
{
    if (obj_player.weapon_launched == 1)
    {
        if other.attacked == 0  or (obj_player.weapon_pointer == obj_player.chain_saw_index)
        {
            if attack_count&lt;attack_count_max
            {
                obj_player.weapon_angle_delay = obj_player.weapon_angle_delay_time
                view_effect_position(2)
                
                with(obj_player)
                {audio_play_near_hit()}
                
                if obj_player.weapon_pointer == obj_player.chain_saw_index
                {
                    if !audio_is_playing(snd_chainsaw_hit)
                    {audio_play_sound(snd_chainsaw_hit,0,0)}
                }
                else
                {
                    achievement_plus(2)
                }
                
                other.attacked = 1
                other.alarm[0] = other.attacked_delay
                other.hp -= damage_cal(obj_player.weapon_damage) * (1+rpg_skill_get_level(3)/4)
                
                other.stunned = 1
                other.alarm[1] = other.stunned_time
                
                other.outline = 1
                other.alarm[3] = other.outline_time
                
                other.reaction_speed += 6 + rpg_skill_get_level(2)*3
                other.reaction_direction = point_direction(obj_player.x, obj_player.y, other.x, other.y)
                
                other.detect = 1
                
                attack_count += 1
                if obj_player.weapon_pointer == obj_player.chain_saw_index
                {
                    attack_count = 0
                    obj_player.weapon_angle_delay = 0
                    
                    particle_burst_up(sys_particle.p_part_blood_up,other.x,other.y,sys_view.view_a+90,10,1)
                }
                else
                {
                    particle_burst(sys_particle.p_part_blood,other.x,other.y,sys_view.view_a+180,20,2)
                    particle_burst_up(sys_particle.p_part_blood_up,other.x,other.y,sys_view.view_a+180,20,2)
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_map_item">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var target_ins = other;

if (obj_player.weapon_kind == 3) and (obj_player.weapon_launched == 1) and ((obj_player.weapon_pointer == 4) or (obj_player.weapon_pointer == 2) or (obj_player.weapon_pointer == 27) or (obj_player.weapon_pointer == 28))
{
    a = target_ins.object_index == obj_tree1 
    b = target_ins.object_index == obj_tree2
    c = target_ins.object_index == obj_tree3 
    d = target_ins.object_index == obj_tree4
    
    if a or b or c or d
    {
        if target_ins.shake &lt; global.map_item_hit_time
        {
            target_ins.attacked = 1
            target_ins.shake = 10 + global.map_item_hit_time
            
            snd = -4
            if target_ins.object_index == obj_tree1
            {snd = snd_tree_hit}
            if target_ins.object_index == obj_tree2
            {snd = snd_tree_hit}
            if target_ins.object_index == obj_tree3
            {snd = snd_tree_hit}
            if target_ins.object_index == obj_tree4
            {snd = snd_tree_hit}
            if snd != -4
            {
                global.temp_snd = snd
                with(obj_player){audio_play(global.temp_snd)}
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (obj_player.weapon_kind == 3)
{
    if obj_player.weapon_launched or (obj_player.weapon_pointer == obj_player.chain_saw_index)
    {
        draw_sprite_ext(sprite_index,-1,x,y,global.char_aspect,global.char_aspect,image_angle,c_white,1)
    }
    else
    {
        if obj_player.weapon_relaunch_time_count == 0
        {
            draw_sprite_ext(sprite_index,-1,x,y,global.char_aspect,global.char_aspect,image_angle,c_white,1)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
