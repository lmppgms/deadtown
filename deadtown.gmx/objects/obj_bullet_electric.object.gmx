<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_light</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 1
alpha = 1
alpha_speed = 0.05

electric_number = 0
count = 0

line_color = make_color_rgb(220,220,40)

//--------------// light //--------------//
light_type = 1
light_power = 200*alpha
light_color = c_white
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ins = instance_find_directional(x,y, par_zombie,angle+90,angle_range, 10, range)
if 0 &lt; ins
{
    dis = point_distance(x,y,ins.x,ins.y)
    dir = point_direction(x,y,ins.x,ins.y)
    
    if dis &lt; range
    {
        ins.hp -= damage_cal(damage)
        
        ins.attacked = 1
        ins.alarm[0] = ins.attacked_delay
        
        ins.stunned = 1
        ins.alarm[1] = ins.stunned_time
                    
        ins.outline = 1
        ins.alarm[3] = ins.outline_time
        
        if !ins.detect
        {
            ins.detect = 1
            ins.detect_show = 1
            ins.alarm[4] = ins.detect_show_time
        }
        
        electric_number = floor(dis/10)
        for(i=0;i&lt;electric_number;i++)
        {r_dis[i] = random(1)*dis}
        
        electric_number += 1
        r_dis[electric_number-1] = 0
        
        for(i=0;i&lt;electric_number-1;i++)
        {
            for(j=0;j&lt;electric_number - 1 - i;j++)
            {
                if (r_dis[j] &gt; r_dis[j+1])
                {
                    hold = r_dis[j]
                    r_dis[j] = r_dis[j+1]
                    r_dis[j+1] = hold
                }
            }
        }
        
        for(i=0;i&lt;electric_number;i++)
        {
            electric_x[i] = x+lengthdir_x(r_dis[i],dir + random_range(4,8)*choose(-1,1)) + random_range(-3,3)
            electric_y[i] = y+lengthdir_y(r_dis[i],dir + random_range(4,8)*choose(-1,1)) + random_range(-3,3)
        }
        
        electric_number += 1
        electric_x[electric_number-1] = ins.x
        electric_y[electric_number-1] = ins.y
    
        if 0&lt;count
        {
            ins = instance_create(electric_x[electric_number-1],electric_y[electric_number-1],obj_bullet_electric)
            ins.damage = damage
            ins.angle = angle
            ins.angle_range = 180
            ins.range = range
            ins.count = count-1
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha -= alpha_speed

if alpha &lt; 0
{instance_destroy()}
light_power = 200*alpha
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(line_color)
draw_set_alpha(alpha)
for(i=0;i&lt;electric_number-1;i++)
{
    draw_line_width(electric_x[i],electric_y[i],electric_x[i+1],electric_y[i+1],3)
}
draw_set_alpha(1)
draw_set_color(c_black)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
