<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_zombie3</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>par_zombie_special</parentName>
  <maskName>mask_zombie2</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//--------------// move //--------------//
move_speed = 1.7 *(1+sys_spawn_time_light.difficulty/3)

reaction_speed = 0
reaction_speed_max = 9
reaction_friction = 0.8
reaction_direction = 0

my_angle = random(360)
my_angle_slow = random(360)
my_angle_speed = 5

detect = 0

random_move = 1
random_move_count = random_range(30,60)
random_direction = random(360)

feet_cycle_angle = 0
feet_cycle_angle_speed = 10
feet_angle_max = 30
feet_dis = 8*global.char_aspect
feet_angle = sin(degtorad(feet_cycle_angle))*feet_angle_max
foot_long = 8*global.char_aspect
foot_right_x = 0
foot_right_y = 0
foot_left_x = 0
foot_left_y = 0

//--------------// hp rpg //--------------//
wave_zombie = 0

hp = floor(150 *(1+sys_spawn_time_light.difficulty))
damage = floor(10 *(1+sys_spawn_time_light.difficulty))

exp_point = 20

stunned = 0
stunned_time = 30

attacked = 0
attacked_delay = 10

//--------------// image //--------------//
alpha_speed = 0.1
image_index = irandom_range(0,11)
image_speed = 0

detect_show = 0
detect_show_time = 30
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// item drop
item_type[0] = 3
item_index[0] = 19
item_number[0] = 0.5

item_type[1] = 4
item_index[1] = 41
item_number[1] = 0.5

item_kind = 2

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// outline
shake_x = 0
shake_y = 0

outline_sprite = outline_zombie3

outline = 0
outline_time = 30
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// audio
audio_init()

alarm[5] = irandom_range(1,300)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// mask
image_xscale = global.char_aspect
image_yscale = global.char_aspect
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// delay dead
dead_delay = 50
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// audio
audio_free()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rpg_exp_get(exp_point)
achievement_plus(13)

if random(100) &lt; global.zombie_item_percent + rpg_skill_get_level(9)*10
{
    ran = irandom(item_kind-1)
    
    if item_number[ran]&lt;1
    {
        if random(1) &lt; item_number[ran]
        {
            ins = instance_create(x,y,obj_item)
            ins.item_type = item_type[ran]
            ins.item_index = item_index[ran]
            ins.item_number = 1
            
            ins.dir = random(360)
            ins.sp = 5
        }
    }
    else
    {
        ins = instance_create(x,y,obj_item)
        ins.item_type = item_type[ran]
        ins.item_index = item_index[ran]
        ins.item_number = item_number[ran]
        
        ins.dir = random(360)
        ins.sp = 5
    }
    
}

particle_burst(sys_particle.p_part_blood,x,y,0,180,2)
particle_burst_up(sys_particle.p_part_blood_up,x,y,0,180,2)

particle_burst_up(sys_particle.p_part_zombie3_up,x,y,0,180,5)
particle_burst_up(sys_particle.p_part_zombie3_up2,x,y,0,180,5)

view_effect_position(7)
view_effect_closeup(60)

sound_view_boom(800,x,y)
    
instance_create(x,y,obj_zombie3_boom)

instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// groan

if point_distance(x,y,obj_player.x,obj_player.y) &lt; 600
{
    audio_play(choose(snd_zombie_groan1,snd_zombie_groan2,snd_zombie_groan3,snd_zombie_groan4))
}

if detect
{
    alarm[5] = 240
}
else
{
    alarm[5] = 600
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>detect_show = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>outline = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>random_move = 1
random_move_count = random_range(60,120)
random_direction = random(360)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stunned = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>attacked = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///detect
if sys_spawn_time_light.day_time &gt; 19 or sys_spawn_time_light.day_time &lt; 6
{
    if !detect
    {
        detect = 1
        detect_show = 1
        alarm[4] = detect_show_time
    }
}
if sys_spawn_time_light.weather == 1
{
    if !detect
    {
        detect = 1
        detect_show = 1
        alarm[4] = detect_show_time
    }
}
if point_distance(x,y,obj_player.x,obj_player.y) &lt; 50
{
    if !detect
    {
        detect = 1
        detect_show = 1
        alarm[4] = detect_show_time
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move
xx = 0
yy = 0

if 0 &lt; random_move_count
{random_move_count -= 1;}
else
{
    random_move = 0
    if alarm[2] &lt; 0
    {alarm[2] = random_range(20,40)}
}

if stunned == 0
{
    if detect == 0
    {
        if random_move
        {
            xx += lengthdir_x(move_speed/3*2,random_direction)
            yy += lengthdir_y(move_speed/3*2,random_direction)
        }
    }
    else
    {
        if (point_distance(x,y,obj_player.x,obj_player.y)&gt;20)
        {
            mp_potential_step_object(obj_player.x, obj_player.y, move_speed, par_solid)
        }
    }
}

if reaction_speed_max &lt; reaction_speed
{reaction_speed = reaction_speed_max}

if reaction_friction &lt;= reaction_speed
{reaction_speed -= reaction_friction}
else
{reaction_speed = 0}

xx += lengthdir_x(reaction_speed,reaction_direction)
yy += lengthdir_y(reaction_speed,reaction_direction)

if xx != 0 and yy != 0
{
    if !place_meeting(x+xx,y+yy,par_solid) and !place_meeting(x+xx,y+yy,par_action) and !place_meeting(x+xx,y+yy,par_action_door)
    {
        x += xx
        y += yy
    }
    else
    {
        random_direction = random(360)
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// death
if (hp &lt; 0)
{
    if alarm[6] &lt; 0
    {
        alarm[6] = dead_delay
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// image
if (0&lt;point_distance(xprevious,yprevious,x,y))
{
    my_angle = point_direction(xprevious,yprevious,x,y)
}

if detect == 1
{
    if (point_distance(obj_player.x,obj_player.y,x,y)&lt;100)
    {
        my_angle = point_direction(x,y,obj_player.x,obj_player.y)
    }
}

if reaction_speed &gt; 0
{
    my_angle = reaction_direction + 180
    my_angle_slow = my_angle
}

if angular_gap(my_angle_slow,my_angle) &lt; 0
{my_angle_slow -= my_angle_speed}
if angular_gap(my_angle_slow,my_angle) &gt; 0
{my_angle_slow += my_angle_speed}

my_alpha = 0
for (i=0;i&lt;instance_number(par_light);i++)
{
    ins = instance_find(par_light,i)
    if ins.light_type == 1
    {
        my_alpha = max(my_alpha,ins.light_power/point_distance(x,y,ins.x,ins.y)/2.5)
    }
    if ins.light_type == 2
    {
        if abs(angle_difference(point_direction(ins.x,ins.y,x,y), ins.light_angle)) &lt; 45
        {
            my_alpha = max(my_alpha,ins.light_power/point_distance(x,y,ins.x,ins.y)/2)
        }
        my_alpha = max(my_alpha,ins.light_power/point_distance(x,y,ins.x,ins.y)/5)
    }
    if ins.light_type == 3
    {
        if abs(angle_difference(point_direction(ins.x,ins.y,x,y), ins.light_angle)) &lt; 30
        {
            my_alpha = max(my_alpha,ins.light_power/point_distance(x,y,ins.x,ins.y)/2)
        }
        my_alpha = max(my_alpha,ins.light_power/point_distance(x,y,ins.x,ins.y)/5)
    }
}
my_alpha += 1 - sys_spawn_time_light.dark_alpha

if my_alpha&gt;=0.4 {my_alpha = 1}
if my_alpha&lt;0.4 {my_alpha = 0}

if image_alpha &lt; my_alpha
{
    image_alpha += alpha_speed
}
if image_alpha &gt; my_alpha
{
    image_alpha -= alpha_speed
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///audio
audio_update()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if outline or (obj_player.equip_gun_pointer == obj_player.night_vision_index)
{
    aa = alarm[3]/30
    vmx = view_xview[0] + view_wview[0]/2
    vmy = view_yview[0] + view_hview[0]/2
    
    dis = point_distance(vmx,vmy,x,y)
    dir = point_direction(vmx,vmy,x,y)
    
    vp =  display_get_gui_width()/view_wview[0];
    
    dis *= vp
    dir += view_angle[0]
    
    xx = display_get_gui_width()/2 + lengthdir_x(dis,dir)
    yy = display_get_gui_height()/2 + lengthdir_y(dis,dir)
    
    outline_color = make_colour_rgb(118,158,138)
    
    draw_sprite_ext(outline_sprite,0,xx,yy,vp*global.char_aspect,vp*global.char_aspect,my_angle_slow+view_angle[0],outline_color,0.8*aa)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if 0&lt;image_alpha
{
    if 6 &lt; sys_spawn_time_light.day_time and sys_spawn_time_light.day_time &lt; 18 
    {
        xx = x + lengthdir_x(12,sys_spawn_time_light.day_time/24*360-180-45)
        yy = y + lengthdir_y(12,sys_spawn_time_light.day_time/24*360-180-45)
    }
    else
    {
        dir = point_direction(obj_player.x, obj_player.y, x, y)
        
        xx = x + lengthdir_x(10,dir)
        yy = y + lengthdir_y(10,dir)
    }
    draw_sprite_ext(sprite_index,image_index,xx,yy,global.char_aspect,global.char_aspect,my_angle_slow,c_black,image_alpha*0.5) // shadow

    if alarm[6] &lt; 0
    {ccc = c_white}
    else
    {ccc = merge_colour(c_red,c_white,alarm[6]/dead_delay)}
    draw_sprite_ext(sprite_index,image_index,x,y,global.char_aspect,global.char_aspect,my_angle_slow,ccc,image_alpha)
    
    
    if detect_show
    {
        draw_sprite_ext(spr_zombie_detect,0,x,y,global.char_aspect,global.char_aspect,sys_view.view_a,c_white,0.8)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
