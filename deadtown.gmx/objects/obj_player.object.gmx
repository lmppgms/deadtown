<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_light</parentName>
  <maskName>mask_player</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//--------------// move //--------------//
move_speed_normal = 7
move_speed = move_speed_normal
player_angle = 0

move_count = 0
no_move_kill = 0

reaction_speed = 0
reaction_speed_max = 6
reaction_friction = 0.8
reaction_direction = 0

vehicle_ins = noone
vehicle_speed = 0

feet_cycle_angle = 0
feet_cycle_angle_speed = 10
feet_angle_max = 30
feet_dis = 7
feet_angle = sin(degtorad(feet_cycle_angle))*feet_angle_max
foot_long = 7
foot_right_x = 0
foot_right_y = 0
foot_left_x = 0
foot_left_y = 0

//--------------// image //--------------//
player_sprite = spr_player;
player_costume = 0

//--------------// action //--------------//
length = 999999
target_ins = noone
outline_ins = noone

repair = 0
repair_ins = noone

repair_hp = 1
repair_hp_max = 1

//--------------// light //--------------//
light_type = 1
light_power = 100
light_color = c_white
light_angle = 0

//--------------// hp rpg //--------------//
hp = 100
hp_max = 100

hp_recover = 0.04

hungry = 100
hungry_max = 100

hungry_speed = 0.01
hungry_hurt = 0.02

//--------------// buff //--------------//
buff_speed = 0
buff_speed_max = 30*60*10 // 10 minutes
buff_relax = 0
buff_relax_max = 30*60*10 // 10 minutes
buff_painkiller = 0
buff_painkiller_max = 30*60*10 // 10 minutes
buff_poison = 0
buff_poison_max = 30*60 // 1 minutes

buff_poison_hurt = 0.06

//--------------// weapon //--------------//
weapon_kind = 1 // 1:gun/throw 2:sniper 3:near
weapon_sprite = -1
weapon_pointer = 0

player_arm = 20

weapon_reload_time = 60
weapon_bull_number = 1
weapon_ammo_number = 100

weapon_ammo_type = 4

weapon_damage = 20
weapon_relaunch_time = 20
weapon_range = 800
weapon_reaction = 10
weapon_action_able = 1

weapon_angle_range_basic = 1
weapon_angle_range = 0
weapon_angle_range_speed = 0.1

weapon_angle_range_move = 0 //CA

weapon_ammo_count = 0 //CA
weapon_reload_time_count = 0 //CA
weapon_relaunch_time_count = 0 //CA

weapon_auto_reload_time = 30
weapon_auto_reload_count = 0

weapon_bow_count = 0 //CA

//for sniper
scope_time = 0

//for near
weapon_launched = 0
weapon_angle_range_knife = 0
weapon_angle = -weapon_angle_range_knife //CA
weapon_angle_speed = 20
weapon_angle_delay = 0
weapon_angle_delay_time = 5

switch(weapon_ammo_type)
{
    case 1: weapon_bullet_object = obj_bullet; break;
    case 2: weapon_bullet_object = obj_bullet; break;
    case 3: weapon_bullet_object = obj_bullet; break;
    case 4: weapon_bullet_object = obj_bullet_arrow; break;
    default: weapon_bullet_object = obj_bullet; break;
}

//--------------// special weapon //--------------//
cross_bow_index = 23

chain_saw_index = 5
chain_saw_oil_usage = 0.1
chain_saw_count = 0
chain_saw_count_min = 30*2.5
chain_saw_count_max = 30*8

flame_thrower_index = 25
flame_thrower_oil_usage = 0.1

stun_gun_index = 26
stun_gun_electric_usage = 0.1

//--------------// equipment //--------------//
equip_cloth_sprite = spr_noone
equip_cloth_defence = 0
equip_cloth_moving = 0

equip_deco_sprite = spr_noone
equip_deco_defence = 0
equip_deco_moving = 0

//--------------// special equipment //--------------//
equip_hand_pointer = 0
equip_gun_pointer = 0

//gun
night_vision_index = 6
laser_sight_index = 7
gun_silencer_index = 12

//hand
compass_index = 8
sundial_index = 9
watch_index = 10
digital_watch_index = 11

flash_light_index = 13
torch_light_index = 15

//--------------// action //--------------//
wood_index = 23
wood_usage = 5
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>20</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// audio
audio_init()

feet_sound = 1

alarm[1] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// audio
audio_free()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// heartbeat sound
if hp/hp_max &lt;= 0.6
{
    alarm[1] = floor(hp/hp_max*25)+10
    if hp/hp_max &lt; 0.2
    {audio_play(snd_heartbeat3)}
    else if hp/hp_max &lt; 0.4
    {audio_play(snd_heartbeat2)}
    else
    {audio_play(snd_heartbeat)}
}
else
{
    alarm[1] = 30
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>10</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if weapon_pointer == chain_saw_index
{
    if chain_saw_count_min &lt; chain_saw_count
    {
        xx = x
        yy = y
        
        particle_burst_up(sys_particle.p_part_smoke_up,xx,yy,0,180,1)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// attack
launch = 0
launch_button = 0

if vehicle_ins == noone
{
    if weapon_kind == 1
    {
        if weapon_ammo_type == 4 and weapon_pointer != cross_bow_index // bow
        {
            if sys_view.right_button_pressed == 1
            {
                weapon_bow_count = 0
                audio_play_sound(snd_bow_draw,0,0)
            }
            if sys_view.right_button == 1
            {
                weapon_bow_count += 1
            }
            if sys_view.right_button_released == 1
            {
                if weapon_relaunch_time&lt;weapon_bow_count
                {
                    audio_play_sound(snd_bow_release,0,0)
                    launch_button = 1
                    weapon_bow_count = 0
                }
                else
                {
                    audio_stop_sound(snd_bow_draw)
                }
            }
        }
        else
        {
            if sys_view.right_button_pressed == 1
            {
                launch_button = 1
            }
            if weapon_action_able
            {
                if sys_view.right_button == 1
                {
                    launch_button = 1
                }
            }
        }
    }
    if weapon_kind == 2
    {
        if sys_view.right_button_released == 1
        {
            launch_button = 1
        }
        if weapon_action_able
        {
            if sys_view.right_button == 1
            {
                launch_button = 1
            }
        }
    }
    if weapon_kind == 3
    {
        if sys_view.right_button == 1
        {
            if weapon_pointer == chain_saw_index
            {
                if chain_saw_oil_usage &lt; global.item_oil
                {
                    global.item_oil -= chain_saw_oil_usage
                    chain_saw_count += 1
                    if chain_saw_count &lt; chain_saw_count_min
                    {
                        audio_stop_sound(snd_chainsaw_active)
                        if !audio_is_playing(snd_chainsaw_start)
                        {audio_play_sound(snd_chainsaw_start,0,0)}
                    }
                }
                else
                {audio_stop_sound(snd_chainsaw_active)}
                
                if chain_saw_count_min &lt; chain_saw_count
                {
                    launch_button = 1
                    if !audio_is_playing(snd_chainsaw_active)
                    {audio_play_sound(snd_chainsaw_active,0,1)}
                }
                if chain_saw_count_max &lt; chain_saw_count
                {chain_saw_count = chain_saw_count_max}
            }
            else
            {
                audio_stop_sound(snd_chainsaw_active)
                launch_button = 1
            }
        }
        else
        {
            audio_stop_sound(snd_chainsaw_active)
            chain_saw_count -= 1
            if chain_saw_count &lt; 0
            {chain_saw_count = 0}
        }
        
        
        if chain_saw_count_min &lt; chain_saw_count
        {
            if !audio_is_playing(snd_chainsaw_idle)
            {audio_play_sound(snd_chainsaw_idle,0,0)}
        }
    }
    else {audio_stop_sound(snd_chainsaw_active)}
}
else
{
    if sys_view.right_button_pressed == 1
    {
        snd = -4
        if vehicle_ins.object_index == obj_bicycle
        {snd = snd_bicycle_ring}
        if vehicle_ins.object_index == obj_motocycle
        {snd = snd_moto_horn}
        
        if !audio_is_playing(snd)
        {
            audio_play_sound(snd,0,0)
        }
    }
}

if weapon_pointer != chain_saw_index
{
    chain_saw_count = 0
}

if weapon_relaunch_time_count &lt;= 0
{
    if launch_button == 1
    {
        if weapon_kind == 1 or weapon_kind == 2
        {
            if weapon_ammo_type == 4  and weapon_pointer != cross_bow_index // bow
            {
                if 1 &lt;= global.item_ammo_arrow
                {
                    global.item_ammo_arrow -= 1
                    launch = 1
                }
            }
            else
            {
                if 1 &lt;= weapon_ammo_count
                {
                    weapon_ammo_count -= 1
                    weapon_reload_time_count = 0
                    launch = 1
                }
            }
        }
        if weapon_kind == 3
        {
            launch = 1
        }    
    }
}
switch(weapon_ammo_type)
{
    case 1: weapon_bullet_object = obj_bullet; break;
    case 2: weapon_bullet_object = obj_bullet; break;
    case 3: weapon_bullet_object = obj_bullet; break;
    case 4: weapon_bullet_object = obj_bullet_arrow; break;
    default: weapon_bullet_object = obj_bullet; break;
}

switch(weapon_ammo_type)
{
    case 1: total_ammo = global.item_ammo_normal; break;
    case 2: total_ammo = global.item_ammo_shotgun; break;
    case 3: total_ammo = global.item_ammo_machinegun; break;
    case 4: total_ammo = global.item_ammo_arrow; break;
    default: total_ammo = 0; break;
}

if weapon_pointer == 25 or weapon_pointer == 26 // fire and stun
{
    total_ammo = 1000
}

how_many = weapon_ammo_number-weapon_ammo_count
if weapon_ammo_type == 2 {how_many = 1}
if 0 &lt; total_ammo and (weapon_ammo_type!=4 or weapon_pointer == cross_bow_index)
{
    if weapon_ammo_count &lt; weapon_ammo_number //auto reload
    {
        if (weapon_auto_reload_time &lt; weapon_auto_reload_count) or (weapon_ammo_count == 0) or (weapon_ammo_type == 2)
        {
            if weapon_relaunch_time_count &lt;= 0
            {
                weapon_reload_time_count += 1
                if weapon_reload_time_count == 1
                {
                    audio_stop_reload()
                    audio_play_reload()
                }
                
                if weapon_reload_time &lt; weapon_reload_time_count * (1+rpg_skill_get_level(4)/4)
                {
                    weapon_auto_reload_count = 0
                    weapon_reload_time_count = 0
                    
                    if total_ammo &lt; how_many
                    {how_many = total_ammo}
                    
                    weapon_ammo_count += how_many
                    
                    if weapon_ammo_number == weapon_ammo_count
                    {if weapon_ammo_type == 2 {audio_play_sound(snd_weapon_reload_shotgun_fin,0,0)}}
                    
                    if weapon_pointer == 25 or weapon_pointer == 26 // fire and stun
                    {
                        total_ammo = 1000
                    }
                    else
                    {
                        switch(weapon_ammo_type)
                        {
                            case 1: global.item_ammo_normal -= how_many; break;
                            case 2: global.item_ammo_shotgun -= how_many; break;
                            case 3: global.item_ammo_machinegun -= how_many; break;
                            case 4: global.item_ammo_arrow -= how_many; break;
                        }
                    }
                }
            }
            else
            {
                weapon_reload_time_count = 0
                audio_stop_reload()
            }
        }
        else
        {
            weapon_auto_reload_count += 1
        }
    }
}
else
{
    weapon_reload_time_count = 0
}

if weapon_kind == 3
{
    weapon_angle_range_move = 0
}
else
{
    weapon_angle_range_move = point_distance(xprevious,yprevious,x,y)/4
}

if rpg_skill_get_level(18)
{weapon_angle_range_move = 0}

if launch == 1
{
    if weapon_kind == 1 or weapon_kind == 2
    {
        weapon_auto_reload_count = 0
        audio_stop_reload()
        if weapon_kind == 2
        {scope_time = 15}
        //weapon_reload_time_count = weapon_reload_time // when it needs to be loaded
        weapon_relaunch_time_count = weapon_relaunch_time
        
        wbn = weapon_bull_number
        
        if weapon_pointer == stun_gun_index
        {
            weapon_bullet_object = obj_bullet_electric
            if stun_gun_electric_usage &lt;= global.item_electric
            {global.item_electric -= stun_gun_electric_usage;}
            else
            {wbn = 0}
        }
        else if weapon_pointer == flame_thrower_index
        {
            weapon_bullet_object = obj_bullet_fire
            if flame_thrower_oil_usage &lt;= global.item_oil
            {global.item_oil -= flame_thrower_oil_usage;}
            else
            {wbn = 0}
        }
        else
        {
            if weapon_bullet_object != obj_bullet_arrow
            {
                particle_burst(sys_particle.p_part_bull,x,y,sys_view.view_a+180+90,30,1)
            }
        }
        
        if 0&lt;wbn
        {
            if weapon_bullet_object == obj_bullet_arrow
            {}
            else
            {
                sound_view_shot(800)
            }
            
            audio_play_gun_sound()
        }
        repeat(wbn)
        {
            xx = x + lengthdir_x(player_arm, player_angle+90)
            yy = y + lengthdir_y(player_arm, player_angle+90)
            
            ins = instance_create(xx,yy,weapon_bullet_object)
            ins.damage = weapon_damage
            ins.angle = sys_view.view_a
            ins.angle_range = weapon_angle_range_basic + weapon_angle_range + weapon_angle_range_move
            ins.range = weapon_range
            ins.count = 2
        }
        
        weapon_angle_range += weapon_reaction
        view_effect_position(weapon_reaction/10 + 1)
    }
    if weapon_kind == 3
    {
        if weapon_launched == 0
        {
            weapon_launched = 1
            obj_player_knife.attack_count = 0
            audio_play_near()
        }
    }
}

if weapon_relaunch_time_count&gt;0
{
    weapon_relaunch_time_count -= 1
}

if weapon_angle_range &gt; 0
{
    if buff_relax
    {con = weapon_angle_range_speed*(weapon_angle_range*weapon_angle_range/5)}
    else
    {con = weapon_angle_range_speed*(weapon_angle_range*weapon_angle_range/7)}
    
    if weapon_angle_range &lt; con
    {
        weapon_angle_range = 0
    }
    else
    {
        weapon_angle_range -= con
    }
}

if weapon_launched == 0 // for knife
{
    if weapon_relaunch_time_count &lt;= 0
    {
        weapon_angle = -weapon_angle_range_knife
    }
    else // when reloading
    {
        weapon_angle -= (weapon_angle_range_knife*2)/(weapon_relaunch_time)
    }
}

if weapon_launched // for knife
{
    if weapon_angle_delay &gt; 0
    {
        weapon_angle_delay -= 1
    }
    else
    {
        weapon_angle += weapon_angle_speed * abs(weapon_angle-weapon_angle_range_knife-20)/80
    }
    
    if weapon_angle &gt; weapon_angle_range_knife
    {
        weapon_launched = 0
        weapon_relaunch_time_count = weapon_relaunch_time
    }
}

//for sniper
if scope_time &gt; 0
{scope_time -= 1}

if instance_exists(obj_bullet_fire)
{
    if !audio_is_playing(snd_flame)
    {
        audio_play_sound(snd_flame,0,1)
    }
}
else
{
    audio_stop_sound(snd_flame)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// death
if hp &lt; 0
{
    if !instance_exists(obj_player_rebirth)
    {
        hp = -1000
        
        if global.save_request == 0
        {
            global.save_request = 1
        }
        global.save_after = 4
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// action / repair

length = 999999
target_ins = noone
outline_ins = noone
for (i=0; i&lt;instance_number(par_action); i++)
{
    ins = instance_find(par_action,i)
    dis = point_distance(x,y,ins.x,ins.y) - ins.length
    if (dis &lt; length) and (dis &lt; 40)
    {
        target_ins = ins
        outline_ins = ins
        length = dis
    }
}

for (i=0; i&lt;instance_number(par_action_door); i++)
{
    ins = instance_find(par_action_door,i)
    dis = point_distance(x,y,ins.x,ins.y) - ins.length
    if (dis &lt; length) and (dis &lt; 30)
    {
        target_ins = ins
        outline_ins = ins
        length = dis
    }
}
for (i=0; i&lt;instance_number(par_map_item); i++)
{
    ins = instance_find(par_map_item,i)
    dis = point_distance(x,y,ins.x,ins.y) - ins.length
    if (dis &lt; length) and (dis &lt; 40)
    {
        target_ins = ins
        outline_ins = ins
        length = dis
    }
}

for (i=0; i&lt;instance_number(par_vehicle); i++)
{
    ins = instance_find(par_vehicle,i)
    dis = point_distance(x,y,ins.x,ins.y)
    if (dis &lt; 40)
    {
        target_ins = ins
        outline_ins = ins
        length = dis
    }
}


//action
if sys_view.action_button_pressed
{
    if !instance_exists(obj_pre_install)
    {
        if vehicle_ins != noone
        {
            vehicle_ins = noone
        }
        else if target_ins != noone
        {
            sys_view.action_button_pressed = 0
            switch(target_ins.object_index)
            {
                case obj_craftdesk:
                    if target_ins.activated == 1
                    {backpack_craftopen();}
                break;
                case obj_craftdesk_pro: 
                    if target_ins.activated == 1
                    {backpack_craftopen_pro();}
                break;
                case obj_generator_oil: 
                    if target_ins.oil_max/200 &lt; global.item_oil and target_ins.oil &lt; target_ins.oil_max-target_ins.oil_max/10
                    {
                        global.item_oil -= target_ins.oil_max/200;
                        target_ins.oil += target_ins.oil_max/10;
                    }
                break;
                case obj_campfire: 
                    if target_ins.activated
                    {backpack_cookopen(0);}
                    else
                    {
                        if wood_usage&lt;=item_count(4,wood_index)
                        {
                            repeat(wood_usage) {item_drop(4,wood_index)}
                            target_ins.wood += target_ins.wood_max+10
                        }
                    }
                break;
                case obj_brazier:
                    if target_ins.activated
                    {backpack_fireopen(0);}
                    else
                    {
                        if wood_usage&lt;=item_count(4,wood_index)
                        {
                            repeat(wood_usage) {item_drop(4,wood_index)}
                            target_ins.wood += target_ins.wood_max+10
                        }
                    }
                break;
                case obj_cooker:
                    if target_ins.activated
                    {backpack_cookopen(1);}
                break;
                case obj_brazier_electric:
                    if target_ins.activated
                    {backpack_fireopen(1);}
                break;
                case obj_bicycle:
                    {vehicle_ins = target_ins}
                break;
                case obj_motocycle:
                    {
                        vehicle_ins = target_ins
                        audio_play(snd_moto_start)
                    }
                break;
                
                case obj_bettery:
                    {
                        if weapon_pointer == stun_gun_index
                        {
                            if 100 &lt;= target_ins.electricity
                            {
                                target_ins.electricity -= 100
                                global.item_electric += 100
                            }
                        }
                    }
                break;
                
                case obj_turret: break;
                case obj_turret_move: break;
                case obj_lightaction: break;
                case obj_lightaction_move: break;
                case obj_generator_solar: break;
                case obj_generator_nuclear: break;
                case obj_door: break;
                case obj_barricade: break;
                case obj_iron_door: break;
                case obj_iron_barricade: break;
                case obj_trap_electric: break;
                case obj_trap: break;
                case obj_gps: break;
                
                default: // par_map_item
                    if target_ins.shake == 0
                    {
                        target_ins.attacked = 1
                        target_ins.shake = 10 + global.map_item_hit_time
                        
                        snd = -4
                        if target_ins.object_index == obj_tree1
                        {snd = snd_tree_hit}
                        if target_ins.object_index == obj_tree2
                        {snd = snd_tree_hit}
                        if target_ins.object_index == obj_tree3
                        {snd = snd_tree_hit}
                        if target_ins.object_index == obj_tree4
                        {snd = snd_tree_hit}
                        if target_ins.object_index == obj_trash
                        {snd = snd_trash_hit}
                        if target_ins.object_index == obj_car
                        {snd = snd_car_hit}
                        if snd != -4
                        {audio_play(snd)}
                    }
                break;
            }
        }
    }
}


//repair
repair = 0
if target_ins != noone
{
    oo = target_ins.object_index   
    a = (oo == obj_craftdesk) or (oo == obj_craftdesk_pro) or (oo == obj_turret) or (oo == obj_barricade) or (oo == obj_iron_door)
    b = (oo == obj_bettery) or (oo == obj_generator_solar) or (oo == obj_generator_nuclear) or (oo == obj_generator_oil)
    c = (oo == obj_door) or (oo == obj_campfire) or (oo == obj_brazier) or (oo == obj_trap_electric) or (oo == obj_iron_barricade)
    d = (oo == obj_cooker) or (oo == obj_brazier_electric)
    
    if a or b or c or d
    {
        if rpg_skill_get_level(17)
        {
            target_ins.hp += target_ins.hp_max/30/2
        }
        else
        {
            target_ins.hp += target_ins.hp_max/30/3
        }
        
        if target_ins.hp_max &lt; target_ins.hp {target_ins.hp = target_ins.hp_max}
        else {repair = 1; repair_ins = target_ins}
        
        repair_hp = target_ins.hp
        repair_hp_max = target_ins.hp_max
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///vehicle
if vehicle_ins != noone
{
    if instance_exists(vehicle_ins)
    {
        vehicle_ins.x = x
        vehicle_ins.y = y
        vehicle_ins.image_angle = player_angle
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// image + light
player_sprite = spr_player;
if weapon_kind == 3
{
    if weapon_pointer == chain_saw_index
    {
        player_sprite = spr_player
    }
    else
    {
        if weapon_launched == 0
        {player_sprite = spr_player_near}
        else
        {player_sprite = spr_player_near_attack}
    }
}
if vehicle_ins != noone
{
    player_sprite = spr_player_vehicle
    feet_angle = 0
}
if sys_view.right_button
{
    feet_angle = 0
}

light_type = 1
light_power = 100
light_color = c_white

if rpg_skill_get_level(16)
{light_power = 250}

if equip_hand_pointer == flash_light_index
{
    light_type = 2
    light_power = 400
    light_color = c_white
    light_angle = player_angle+90
}
if equip_hand_pointer == torch_light_index
{
    light_type = 1
    light_power = 250
    light_color = c_white
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///moving
move_speed = move_speed_normal + rpg_skill_get_level(7)*0.3
move_speed += equip_cloth_moving + equip_deco_moving
if buff_speed {move_speed += 2}
move_speed -= hungry/hungry_max*0.5
if obj_player_body.attacked
{
    if !buff_painkiller
    {move_speed -= 1.5}
}

ins = instance_nearest(x,y,obj_zombie2_shot)
if ins != noone
{
    if point_distance(x,y,ins.x,ins.y) &lt; 150
    {
        move_speed /= 2
    }
}

if keyboard_check(vk_shift)
{
    move_speed += 10
}

go_x = lengthdir_x(sys_view.left_distance_ratio*move_speed,sys_view.view_a+sys_view.left_direction)
go_y = lengthdir_y(sys_view.left_distance_ratio*move_speed,sys_view.view_a+sys_view.left_direction)

// vehicle
if vehicle_ins != noone
{
    if instance_exists(vehicle_ins)
    {
        if vehicle_ins.oil_usage &lt; global.item_oil
        {
            global.item_oil -= vehicle_ins.oil_usage
            move_speed = -vehicle_ins.vehicle_speed*lengthdir_y(1,sys_view.left_direction)
            if move_speed &lt; -vehicle_ins.vehicle_back_speed
            {move_speed = -vehicle_ins.vehicle_back_speed}
            
            if 0&lt;move_speed
            {
                if vehicle_speed&lt;move_speed
                {vehicle_speed += vehicle_ins.vehicle_accel}
            }
            if move_speed&lt;0
            {
                if move_speed&lt;vehicle_speed
                {vehicle_speed -= vehicle_ins.vehicle_accel}
            }
            if 0&lt;vehicle_speed {vehicle_speed -= vehicle_ins.vehicle_fric}
            if vehicle_speed&lt;0 {vehicle_speed += vehicle_ins.vehicle_fric}
            
            if 0.1&lt;abs(vehicle_speed) and (0&lt;abs(move_speed))
            {
                sys_view.view_a -= vehicle_ins.vehicle_angle_speed*lengthdir_x(1,sys_view.left_direction)*vehicle_speed/vehicle_ins.vehicle_back_speed
            }
            
            go_x = lengthdir_x(sys_view.left_distance_ratio*vehicle_speed,sys_view.view_a+90)
            go_y = lengthdir_y(sys_view.left_distance_ratio*vehicle_speed,sys_view.view_a+90)
        }
        else
        {
            go_x = 0
            go_y = 0
        }
    }
    else
    {
        vehicle_ins = noone
    }
}


// only for testing on the computer 
go_d = point_direction(0,0,keyboard_check(ord("D"))-keyboard_check(ord("A")),keyboard_check(ord("S"))-keyboard_check(ord("W")))
if (keyboard_check(ord("D")) or keyboard_check(ord("A")) or keyboard_check(ord("S")) or keyboard_check(ord("W")))
{
    go_x = lengthdir_x(move_speed,sys_view.view_a+go_d)
    go_y = lengthdir_y(move_speed,sys_view.view_a+go_d)
}


if reaction_speed_max &lt; reaction_speed
{reaction_speed = reaction_speed_max}

if reaction_friction &lt;= reaction_speed
{reaction_speed -= reaction_friction}
else
{reaction_speed = 0}

go_x += lengthdir_x(reaction_speed,reaction_direction)
go_y += lengthdir_y(reaction_speed,reaction_direction)



if !place_meeting(x+go_x,y,par_solid) and !place_meeting(x+go_x,y,par_action)
{
    x += go_x
}
else
{
    repeat(move_speed)
    {
        if go_x &gt; 0
        {
            if (!place_meeting(x+1,y,par_solid) and !place_meeting(x+1,y,par_action))
            {x += 1}
        }
        else
        {
            if (!place_meeting(x-1,y,par_solid) and !place_meeting(x-1,y,par_action))
            {x -= 1}
        }
    }
}
if x&lt;0 {x = 0}
if room_width&lt;x {x = room_width}

if !place_meeting(x,y+go_y,par_solid) and !place_meeting(x,y+go_y,par_action)
{
    y += go_y
}
else
{
    repeat(move_speed)
    {
        if go_y &gt; 0
        {
            if (!place_meeting(x,y+1,par_solid) and !place_meeting(x,y+1,par_action))
            {y += 1}
        }
        else
        {
            if (!place_meeting(x,y-1,par_solid) and !place_meeting(x,y-1,par_action))
            {y -= 1}
        }
    }
}
if y&lt;0 {y = 0}
if room_height&lt;y {y = room_height}

if vehicle_ins != noone
{
    if vehicle_ins.object_index == obj_motocycle
    {
        move_count += point_distance(xprevious,yprevious,x,y)
        if 10&lt;move_count
        {
            move_count -= 10
            achievement_plus(16)
        }
    }
}

if 0&lt;point_distance(x,y,xprevious,yprevious)
{no_move_kill = 0}
if 10&lt;=no_move_kill
{achievement_plus(21)}

sound_view_walk(point_distance(xprevious,yprevious,x,y)*30)

if 1&lt;point_distance(xprevious,yprevious,x,y)
{
    if vehicle_ins == noone
    {
        feet_cycle_angle += feet_cycle_angle_speed*move_speed/move_speed_normal
    
        if 360&lt;feet_cycle_angle
        {
            feet_sound = 1
            feet_cycle_angle -= 360
            audio_play(snd_player_foot_normal)
        }
        if feet_sound
        {
            if 180&lt;feet_cycle_angle
            {
                audio_play(snd_player_foot_normal)
                feet_sound = 0
            }
        }
    }
    
    feet_angle = sin(degtorad(feet_cycle_angle))*feet_angle_max
    feet_long = lengthdir_y(feet_dis,feet_angle)*move_speed_normal
    tt = 0.5+abs(lengthdir_x(-0.5,abs(angle_difference(point_direction(xprevious,yprevious,x,y),player_angle-90))))
    feet_long *= tt
    foot_right_x = lengthdir_x(feet_long,point_direction(xprevious,yprevious,x,y)) + lengthdir_x(foot_long-5, player_angle)
    foot_right_y = lengthdir_y(feet_long,point_direction(xprevious,yprevious,x,y)) + lengthdir_y(foot_long-5, player_angle)
    foot_left_x = lengthdir_x(-feet_long,point_direction(xprevious,yprevious,x,y)) + lengthdir_x(foot_long+4, player_angle+180)
    foot_left_y = lengthdir_y(-feet_long,point_direction(xprevious,yprevious,x,y)) + lengthdir_y(foot_long+4, player_angle+180)
}
else
{
    if foot_right_x &lt; lengthdir_x(foot_long-5, player_angle)
    {foot_right_x += 1}
    if foot_right_x &gt; lengthdir_x(foot_long-5, player_angle)
    {foot_right_x -= 1}
    
    if foot_right_y &lt; lengthdir_y(foot_long-5, player_angle)
    {foot_right_y += 1}
    if foot_right_y &gt; lengthdir_y(foot_long-5, player_angle)
    {foot_right_y -= 1}
    
    if foot_left_x &lt; lengthdir_x(foot_long+4, player_angle+180)
    {foot_left_x += 1}
    if foot_left_x &gt; lengthdir_x(foot_long+4, player_angle+180)
    {foot_left_x -= 1}
    
    if foot_left_y &lt; lengthdir_y(foot_long+4, player_angle+180)
    {foot_left_y += 1}
    if foot_left_y &gt; lengthdir_y(foot_long+4, player_angle+180)
    {foot_left_y -= 1}
    
    feet_cycle_angle = 0
    feet_sound = 1
    feet_angle = sin(degtorad(feet_cycle_angle))*feet_angle_max
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// vehicle sound
okk = 0
if 1&lt;point_distance(xprevious,yprevious,x,y)
{
    if vehicle_ins != noone
    {
        if instance_exists(vehicle_ins)
        {
            okk = 1
            snd = -4
            if vehicle_ins.object_index == obj_bicycle
            {snd = snd_bicycle_go}
            if vehicle_ins.object_index == obj_motocycle
            {snd = snd_moto_move}
            if snd != -4
            {
                if !audio_is_playing(snd)
                {audio_play_sound(snd,0,1)}
            }
        }
    }
}

if okk == 0
{
    audio_stop_sound(snd_bicycle_go)
    audio_stop_sound(snd_moto_move)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// hp

hp_max = 100 + rpg_skill_get_level(0)*10

if 0 &lt; buff_poison
{
    if rpg_skill_get_level(20)
    {
        hp -= buff_poison_hurt/2
    }
    else
    {
        hp -= buff_poison_hurt
    }
}

if 0&lt;hungry
{
    if hp &lt; hp_max
    {
        hp += hp_recover + hp_recover*rpg_skill_get_level(1)/6
    }
    hungry -= hungry_speed - hungry_speed*rpg_skill_get_level(8)/8
}
else
{
    hungry = 0
    hp -= hungry_hurt
}

if hungry &lt; 0
{hungry = 0}

if hungry &gt; hungry_max
{hungry = hungry_max}

if hp_max&lt;hp
{hp = hp_max}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// buff

if 0 &lt; buff_speed
{buff_speed -= 1}
else
{buff_speed = 0}
if buff_speed_max &lt; buff_speed
{buff_speed = buff_speed_max}

if 0 &lt; buff_relax
{buff_relax -= 1}
else
{buff_relax = 0}
if buff_relax_max &lt; buff_relax
{buff_relax = buff_relax_max}

if 0 &lt; buff_painkiller
{buff_painkiller -= 1}
else
{buff_painkiller = 0}
if buff_painkiller_max &lt; buff_painkiller
{buff_painkiller = buff_painkiller_max}


if 0 &lt; buff_poison
{buff_poison -= 1}
else
{buff_poison = 0}
if buff_poison_max &lt; buff_poison
{buff_poison = buff_poison_max}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///audio
audio_update()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// shot line
if vehicle_ins == noone
{
    draw_set_colour(c_black)
    ratio = display_get_height()/view_hview[0]
    warb = weapon_angle_range_basic
    war = weapon_angle_range
    wr = weapon_range
    war_move = weapon_angle_range_move
    
    if weapon_kind == 3
    {
        weapon_mini_range = 40
        wr = 70
        war = weapon_angle_range_knife/2
        warb = 0 
        war_move = 0
        sx = display_get_width()/2-1
        sy = display_get_height()/2+sys_view.view_player_y*ratio
    }
    else
    {
        weapon_mini_range = 50
        sx = display_get_width()/2-1
        sy = display_get_height()/2+sys_view.view_player_y*ratio - player_arm*ratio
    }
    
    
    xx1 = lengthdir_x(weapon_mini_range*ratio,90 + warb + war + war_move)
    yy1 = lengthdir_y(weapon_mini_range*ratio,90 + warb + war + war_move)
    
    xx2 = lengthdir_x(weapon_mini_range*ratio,90 - warb - war - war_move)
    yy2 = lengthdir_y(weapon_mini_range*ratio,90 - warb - war - war_move)
    
    xx3 = lengthdir_x(wr*ratio,90 + warb + war + war_move)
    yy3 = lengthdir_y(wr*ratio,90 + warb + war + war_move)
    
    xx4 = lengthdir_x(wr*ratio,90 - warb - war - war_move)
    yy4 = lengthdir_y(wr*ratio,90 - warb - war - war_move)
    
    xx5 = lengthdir_x(weapon_mini_range*ratio,90)
    yy5 = lengthdir_y(weapon_mini_range*ratio,90)
    
    xx6 = lengthdir_x(wr*ratio,90)
    yy6 = lengthdir_y(wr*ratio,90)
    
    draw_set_alpha(0.7)
    
    if weapon_kind == 1
    {
        if weapon_bullet_object == obj_bullet_arrow
        {
            if weapon_relaunch_time&lt;weapon_bow_count or 0&lt;weapon_ammo_count
            {
                draw_line_width(sx+xx5,sy+yy5,sx+xx6,sy+yy6,2)
            }
            draw_arc(sx,sy,wr*ratio,90,(warb + war + war_move)*4,2)
        }
        else
        {
            if stun_gun_index == weapon_pointer
            {
                draw_line_width(sx+xx1,sy+yy1,sx+xx3,sy+yy3,2)
                draw_line_width(sx+xx2,sy+yy2,sx+xx4,sy+yy4,2)
                draw_arc(sx,sy,wr*ratio,90,(warb + war + war_move)*2,2)
                draw_arc(sx,sy,weapon_mini_range*ratio,90,(warb + war + war_move)*2,2)
            }
            else
            {
                draw_line_width(sx+xx1,sy+yy1,sx+xx3,sy+yy3,2)
                draw_line_width(sx+xx2,sy+yy2,sx+xx4,sy+yy4,2)
                if equip_gun_pointer == laser_sight_index
                {
                    draw_set_color(c_red)
                    draw_line_width(sx+xx5,sy+yy5,sx+xx6,sy+yy6,1)
                    draw_set_color(c_black)
                }
            }
        }
    }
    if weapon_kind == 2
    {
        draw_line_width(sx+xx1,sy+yy1,sx+xx3,sy+yy3,2)
        draw_line_width(sx+xx2,sy+yy2,sx+xx4,sy+yy4,2)
        draw_set_color(c_red)
        draw_line_width(sx+xx5,sy+yy5,sx+xx6,sy+yy6,1)
        draw_set_color(c_black)
    }
    if weapon_kind == 3
    {
        if weapon_pointer == chain_saw_index
        {
            if chain_saw_count_min &lt; chain_saw_count
            {draw_set_alpha(0.7)}
            else
            {draw_set_alpha(0.2)}
            
            draw_line_width(sx-20*ratio,sy-40*ratio,sx-20*ratio,sy-100*ratio,2)
            draw_line_width(sx+20*ratio,sy-40*ratio,sx+20*ratio,sy-100*ratio,2)
            draw_arc(sx,sy-100*ratio,20*ratio,90,180,2)
        }
        else
        {
            draw_line_width(sx+xx1,sy+yy1,sx+xx3,sy+yy3,2)
            draw_line_width(sx+xx2,sy+yy2,sx+xx4,sy+yy4,2)
            draw_arc(sx,sy,wr*ratio,90,(warb + war + war_move)*2,2)
        }
    
    }
    
    draw_set_alpha(1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///outline

if outline_ins != noone
{
    if instance_exists(outline_ins)
    {
        with(outline_ins)
        {
            draw_sprite_ext(outline_sprite,0,x+shake_x,y+shake_y,1,1,image_angle,c_white,0.6)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// feedback
if 0.01&lt;sys_view.left_distance_ratio
{
    fx = x+lengthdir_x(sys_view.left_distance_ratio*100,sys_view.view_a+sys_view.left_direction)
    fy = y+lengthdir_y(sys_view.left_distance_ratio*100,sys_view.view_a+sys_view.left_direction)
    draw_sprite_ext(spr_player_move,0,fx,fy,0.8,0.8,sys_view.view_a+sys_view.left_direction-90,c_white,0.5)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// player

player_angle = sys_view.view_a
player_near_angle = player_angle+weapon_angle
if weapon_relaunch_time_count == 0
{
    player_gun_angle = player_angle+feet_angle/4
}
else
{
    player_gun_angle = player_angle
}

if 6 &lt; sys_spawn_time_light.day_time and sys_spawn_time_light.day_time &lt; 18 
{
    xx = x + lengthdir_x(12,sys_spawn_time_light.day_time/24*360-180-45)
    yy = y + lengthdir_y(12,sys_spawn_time_light.day_time/24*360-180-45)
    if (weapon_kind == 3) and (weapon_launched == 1)
    {
        draw_sprite_ext(player_sprite,player_costume,xx,yy,global.char_aspect,global.char_aspect,player_near_angle,c_black,0.5) // shadow
    }
    else
    {
        draw_sprite_ext(player_sprite,player_costume,xx,yy,global.char_aspect,global.char_aspect,player_gun_angle,c_black,0.5) // shadow
    }
}

/*
if 0&lt;equip_cloth_sprite
{draw_sprite_ext(equip_cloth_sprite,-1,x,y,global.char_aspect,global.char_aspect,player_gun_angle,c_white,1)}
if 0&lt;equip_deco_sprite
{draw_sprite_ext(equip_deco_sprite,-1,x,y,global.char_aspect,global.char_aspect,player_gun_angle,c_white,1)}
*/

if vehicle_ins == noone
{
    draw_sprite_ext(spr_player_foot_right,0,x+foot_right_x,y+foot_right_y,global.char_aspect,global.char_aspect,player_angle,c_white,1)
    draw_sprite_ext(spr_player_foot_left,0,x+foot_left_x,y+foot_left_y,global.char_aspect,global.char_aspect,player_angle,c_white,1)
}

if (weapon_kind == 3) and (weapon_launched == 1)
{
    draw_sprite_ext(player_sprite,player_costume,x,y,global.char_aspect,global.char_aspect,player_near_angle,c_white,1)
}
else
{
    draw_sprite_ext(player_sprite,player_costume,x,y,global.char_aspect,global.char_aspect,player_gun_angle,c_white,1)
}

if vehicle_ins == noone
{
    if 0&lt;weapon_sprite and (weapon_kind != 3)
    {
        if (weapon_bullet_object == obj_bullet_arrow) and (weapon_relaunch_time&lt;weapon_bow_count or 0&lt;weapon_ammo_count)
        {
            draw_sprite_ext(weapon_sprite,1,x,y,global.char_aspect,global.char_aspect,player_gun_angle+90,c_white,1)
        }
        else
        {
            draw_sprite_ext(weapon_sprite,0,x,y,global.char_aspect,global.char_aspect,player_gun_angle+90,c_white,1)
        }
    }
}

if (0&lt;weapon_reload_time_count) and ((sys_view.right_button == 0) or (weapon_ammo_count == 0))
{
    reload_x = x + lengthdir_x(35, sys_view.view_a+45)
    reload_y = y + lengthdir_y(35, sys_view.view_a+45)
    draw_sprite_ext(spr_reloading,0,reload_x,reload_y,global.char_aspect,global.char_aspect,sys_view.view_a,c_white,0.8)
}
if repair
{
    if instance_exists(repair_ins)
    {
        draw_sprite_ext(spr_repair,-1,repair_ins.x,repair_ins.y,global.char_aspect,global.char_aspect,player_angle,c_white,0.8)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,obj_motocycle)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,obj_bicycle)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="52">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = sys_spawn_time_light.boss4_x + 50
y = sys_spawn_time_light.boss4_y + 50
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = sys_spawn_time_light.boss3_x + 50
y = sys_spawn_time_light.boss3_y + 50
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = sys_spawn_time_light.boss2_x + 50
y = sys_spawn_time_light.boss2_y + 50
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = sys_spawn_time_light.boss1_x + 50
y = sys_spawn_time_light.boss1_y + 50
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
