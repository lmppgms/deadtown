<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mask_bullet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>40</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 1
alpha = 1
alpha_speed = 0.05

bull_angle = 0

made_by_install = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if made_by_install == 0
{
    //audio_play(snd_weapon_hit1)
    if !audio_is_playing(snd_weapon_hit4)
    {
        audio_play_sound(snd_weapon_hit4,0,0)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if made_by_install == 0
{
    //audio_play(snd_weapon_hit1)
    if !audio_is_playing(snd_weapon_hit1)
    {
        audio_play_sound(snd_weapon_hit1,0,0)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//damage
//angle
//angle_range
//range
var rep;

if (obj_player.equip_gun_pointer == obj_player.laser_sight_index)
{
    rr = choose(random_range(-1,1),random_range(-0.6,0.6),random_range(-0.4,0.4))
    if rpg_skill_get_level(5)
    {rr = choose(random_range(-1,1),random_range(-0.6,0.6),random_range(-0.6,0.6),random_range(-0.4,0.4))}
}
else
{
    rr = choose(random_range(-1,1),random_range(-0.6,0.6))
    if rpg_skill_get_level(5)
    {rr = choose(random_range(-1,1),random_range(-0.6,0.6),random_range(-0.4,0.4))}
}
aa = rr*angle_range

bull_angle = angle + 90 + aa

range_search = range
range_search_unit = range/2

rep = max(floor(log2(range))+1,5)

repeat(10)
{
    x_search = lengthdir_x(range_search,bull_angle)+xstart
    y_search = lengthdir_y(range_search,bull_angle)+ystart
    
    col_check1 = collision_line(xstart,ystart,x_search,y_search,par_solid,1,1) != noone
    col_check2 = collision_line(xstart,ystart,x_search,y_search,par_zombie,1,1) != noone
    col_check3 = collision_line(xstart,ystart,x_search,y_search,par_boss,1,1) != noone
    if instance_exists(obj_boss1)
    {
        for(i=0; i&lt;obj_boss1.body_number-1; i+=2) /// every 2 blocks
        {
            xx0 = obj_boss1.body_x[i]
            yy0 = obj_boss1.body_y[i]
            xx1 = obj_boss1.body_x[i+2]
            yy1 = obj_boss1.body_y[i+2]
            
            if get_line_intersection(xx0,yy0,xx1,yy1,xstart,ystart,x_search,y_search)
            {
                col_check3 = 1
                break;
            }
        }

    }
    
    if col_check1 or col_check2 or col_check3
    {
        range_search -= range_search_unit
    }
    else
    {
        if range_search &lt; range
        {
            range_search += range_search_unit
        }
    }
    range_search_unit /= 2
}

x = xstart + lengthdir_x(range_search+4,bull_angle)
y = ystart + lengthdir_y(range_search+4,bull_angle)

ins = collision_point(x,y,par_zombie,1,1)
ins2 = collision_point(x,y,par_boss,1,1)
if ins != noone
{

    if made_by_install == 0
    {
        if obj_player.weapon_kind == 2
        {
            achievement_plus(7)
        }
    }
    
    ins.hp -= damage_cal(damage)
    
    alarm[1] = 5 // sound
    
    //ins.attacked = 1
    //ins.alarm[0] = ins.attacked_delay
    
    ins.stunned = 1
    ins.alarm[1] = ins.stunned_time
                
    ins.outline = 1
    ins.alarm[3] = ins.outline_time
    
    ins.reaction_speed += 3
    ins.reaction_direction = point_direction(obj_player.x, obj_player.y, ins.x, ins.y)
    
    if !ins.detect
    {
        ins.detect = 1
        ins.detect_show = 1
        ins.alarm[4] = ins.detect_show_time
    }
    
    particle_burst(sys_particle.p_part_blood,x,y,bull_angle,10,1)
    particle_burst_up(sys_particle.p_part_blood_up,x,y,bull_angle,10,1)
    
    particle_burst_up_out(sys_particle.p_part_blood_up_out,x,y,bull_angle-90,0,1)
    
    if rpg_skill_get_level(19)
    {
        if abs(angle_difference(bull_angle,point_direction(obj_player.x, obj_player.y, ins.x, ins.y))) &lt; 2 // critical head shot
        {
            if random(100) &lt; 10
            {
                particle_burst(sys_particle.p_part_blood,x,y,bull_angle+180,10,5)
                ins.reaction_speed += 6
                ins.hp -= damage_cal(damage)/2
                
                alarm[1] = -1 // sound
                alarm[2] = 5 // sound
            }
        }
    }
}
else if ins2 != noone
{
    ins2.hp -= damage_cal(damage)
    alarm[1] = 5 // sound
    
    particle_burst(sys_particle.p_part_blood,x,y,bull_angle,10,1)
    particle_burst_up(sys_particle.p_part_blood_up,x,y,bull_angle,10,1)
    
    particle_burst_up_out(sys_particle.p_part_blood_up_out,x,y,bull_angle-90,0,1)
}
else if instance_exists(obj_boss1)
{
    for(i=0; i&lt;obj_boss1.body_number; i+=2 ) /// every 2 blocks
    {
        dir = point_direction(obj_boss1.body_x[i+1],obj_boss1.body_y[i+1],obj_boss1.body_x[i],obj_boss1.body_y[i])
        
        xx = obj_boss1.body_x[i+1] + lengthdir_x(obj_boss1.move_position,dir)
        yy = obj_boss1.body_y[i+1] + lengthdir_y(obj_boss1.move_position,dir)
        
        if point_distance(xx,yy,x_search,y_search) &lt; obj_boss1.body_width/2
        {
            obj_boss1.body_red[i] = 1
            obj_boss1.hp -= damage_cal(damage)
            alarm[1] = 5 // sound
            
            particle_burst(sys_particle.p_part_blood,x,y,bull_angle,10,1)
            particle_burst_up(sys_particle.p_part_blood_up,x,y,bull_angle,10,1)
            
            particle_burst_up_out(sys_particle.p_part_blood_up_out,x,y,bull_angle-90,0,1)
            break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha -= alpha_speed

if alpha &lt; 0
{instance_destroy()}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_set_alpha(alpha)
//draw_line(xstart,ystart,x,y)
//draw_set_alpha(1)

draw_primitive_begin(pr_linestrip);
draw_vertex_colour(xstart, ystart, c_black, alpha*alpha*alpha-0.1);
draw_vertex_colour(x, y, c_black, alpha);
draw_primitive_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
