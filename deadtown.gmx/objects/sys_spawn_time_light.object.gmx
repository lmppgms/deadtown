<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>icon_spawn_time_light</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_sys</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
/// deactive
deactive_time = 30*1
deactive_range = 1000*1.2

/// item spawn
item_spawn_min = 500*1.2
item_spawn_max = 1500*1.2
item_spawn_time = 30
item_number = 6

item_save_dis_max = 2500*1.2

/// parcel spawn
parcel_number = 4
parcel_item_number = 4

/// parcel ads spawn
parcel_ads_number = 1
item_ads_time = 30*60*2

/// zombie spawn
zombie_spawn_min = 600*1.2
zombie_spawn_max = 900*1.2

zombie_number = 10
zombie_number_max = 40
zombie_spawn_time = 30

zombie_wave1_number = 0
zombie_wave2_number = 0
zombie_wave3_number = 0

zombie_wave1_queue = 0
zombie_wave2_queue = 0
zombie_wave3_queue = 0

zombie_wave_spawn_time = 2
//
zombie_special_number = 2
zombie_special_number_max = 4
zombie_special_spawn_time = 30

zombie_special_wave1_number = 0
zombie_special_wave2_number = 0
zombie_special_wave3_number = 0

zombie_special_wave1_queue = 0
zombie_special_wave2_queue = 0
zombie_special_wave3_queue = 0

zombie_special_wave_spawn_time = 2

/// boss
boss_length = 900
boss_resqawn_day = 3

boss1_day = 10
boss1_x = 2432
boss1_y = 2432

boss2_day = 8
boss2_x = 2816
boss2_y = 7296

boss3_day = 5
boss3_x = 18560
boss3_y = 13690

boss4_day = 10
boss4_x = 17280
boss4_y = 9472


/// time ///
day = 1
day_time = 7 //0~24h
weather = 0 // 1:rainy day
weather_percent = 10

game_time = 0

difficulty = 0

time_speed = 0.0014

change_time = 2

ct1 = 6-change_time;
ct2 = 6+change_time;
ct3 = 18-change_time;
ct4 = 18+change_time;

global.surf_ratio = 4
global.lightsurf = surface_create(view_wview[0]/global.surf_ratio, view_hview[0]/global.surf_ratio*2);

dark_alpha = 0
dark_alpha_max = 0.95

dark_alpha_max_night_skill = 0.90
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>zombie_spawn_time</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>zombie_wave_spawn_time</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>zombie_special_spawn_time</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>zombie_special_wave_spawn_time</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>4</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>item_spawn_time</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>5</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>6</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// rain
rain_number = 15
rain_height = 50
rain_speed = 2
rain_length = 3

for (i=0;i&lt;rain_number;i++)
{
    rain[i,0] = random(display_get_gui_width()) //x
    rain[i,1] = random(display_get_gui_height()) //y
    rain[i,2] = 0 //height
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if unity_ads_check_is_can_show()
{
    while instance_number(obj_parcel_ads) &lt; parcel_ads_number
    {
        dis = random_range(item_spawn_min,item_spawn_max)
        dir = random(360)
        
        xx = obj_player.x + lengthdir_x(dis,dir)
        yy = obj_player.y + lengthdir_y(dis,dir)
        
        if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_solid,1,1) == noone
        {
            if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_action,1,1) == noone
            {
                ins = instance_create(xx,yy,obj_parcel_ads)
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>item_ads_time</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>6</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>while instance_number(obj_item) &lt; item_number
{
    dis = random_range(item_spawn_min,item_spawn_max)
    dir = random(360)
    
    xx = obj_player.x + lengthdir_x(dis,dir)
    yy = obj_player.y + lengthdir_y(dis,dir)
    
    if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_solid,1,1) == noone
    {
        if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_action,1,1) == noone
        {
            ran = db_spawn_random(0)
            if db_spawn_info_get(ran,3) &lt; 1
            {
                if random(1)&lt;db_spawn_info_get(ran,3)
                {
                    ins = instance_create(xx,yy,obj_item)
                    ins.item_type = db_spawn_info_get(ran,1)
                    ins.item_index = db_spawn_info_get(ran,2)
                    ins.item_number = 1
                }
            }
            else
            {
                ins = instance_create(xx,yy,obj_item)
                ins.item_type = db_spawn_info_get(ran,1)
                ins.item_index = db_spawn_info_get(ran,2)
                ins.item_number = irandom_range(db_spawn_info_get(ran,3),db_spawn_info_get(ran,4))
            }
        }
    }
}

while instance_number(obj_parcel) &lt; parcel_number + rpg_skill_get_level(10)
{
    dis = random_range(item_spawn_min,item_spawn_max)
    dir = random(360)
    
    xx = obj_player.x + lengthdir_x(dis,dir)
    yy = obj_player.y + lengthdir_y(dis,dir)
    
    if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_solid,1,1) == noone
    {
        if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_action,1,1) == noone
        {
            ins = instance_create(xx,yy,obj_parcel)
            for(var ic=0; ic&lt;parcel_item_number; ic++)
            {
                ran = db_spawn_random(0)
                
                if db_spawn_info_get(ran,3) &lt; 1
                {
                    ins.item_type[ic] = db_spawn_info_get(ran,1)
                    ins.item_index[ic] = db_spawn_info_get(ran,2)
                    if random(1)&lt;db_spawn_info_get(ran,3)
                    {
                        ins.item_number[ic] = 1
                    }
                    else
                    {
                        ins.item_number[ic] = 0
                    }
                }
                else
                {
                    ins.item_type[ic] = db_spawn_info_get(ran,1)
                    ins.item_index[ic] = db_spawn_info_get(ran,2)
                    ins.item_number[ic] = irandom_range(db_spawn_info_get(ran,3),db_spawn_info_get(ran,4))
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>item_spawn_time</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>5</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>deactive_auto()

with(obj_zombie)
{
    check = abs(x-obj_player.x) &gt; sys_spawn_time_light.zombie_spawn_max or abs(y-obj_player.y) &gt; sys_spawn_time_light.zombie_spawn_max
    if check
    {
        instance_destroy()
        if wave_zombie
        {
            while(1)
            {
                dis = random_range(sys_spawn_time_light.zombie_spawn_min,sys_spawn_time_light.zombie_spawn_max)
                dir = random(360)
                
                xx = obj_player.x + lengthdir_x(dis,dir)
                yy = obj_player.y + lengthdir_y(dis,dir)
                
                if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_solid,1,1) == noone
                {
                    if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_action,1,1) == noone
                    {
                        if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_action_door,1,1) == noone
                        {
                            ins = instance_create(xx,yy,obj_zombie)
                            ins.wave_zombie = 1
                            break;
                        }
                    }
                }
            }
        }
    } 
}
with(par_zombie_special)
{
    check = abs(x-obj_player.x) &gt; sys_spawn_time_light.zombie_spawn_max or abs(y-obj_player.y) &gt; sys_spawn_time_light.zombie_spawn_max
    if check
    {
        dis = random_range(sys_spawn_time_light.zombie_spawn_min,sys_spawn_time_light.zombie_spawn_max)
        dir = random(360)
        
        xx = obj_player.x + lengthdir_x(dis,dir)
        yy = obj_player.y + lengthdir_y(dis,dir)
        
        if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_solid,1,1) == noone
        {
            if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_action,1,1) == noone
            {
                if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_action_door,1,1) == noone
                {
                    x = xx
                    y = yy
                    jump = 0
                    rush = 0
                }
            }
        }
    }
}

with(obj_item)
{
    if abs(x-obj_player.x) &gt; sys_spawn_time_light.item_spawn_max or abs(y-obj_player.y) &gt; sys_spawn_time_light.item_spawn_max
    {
        instance_destroy()
    } 
}

with(obj_parcel)
{
    if abs(x-obj_player.x) &gt; sys_spawn_time_light.item_spawn_max or abs(y-obj_player.y) &gt; sys_spawn_time_light.item_spawn_max
    {
        instance_destroy()
    } 
}

with(obj_parcel_ads)
{
    if abs(x-obj_player.x) &gt; sys_spawn_time_light.item_spawn_max or abs(y-obj_player.y) &gt; sys_spawn_time_light.item_spawn_max
    {
        instance_destroy()
    } 
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>deactive_time</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>4</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spawn = 0
if zombie_special_number_max &gt; instance_number(par_zombie_special)
{
    if day_time &gt; 19
    {
        if 0&lt;zombie_special_wave1_queue
        {
            zombie_special_wave1_queue -= 1
            spawn = 1
        }
    }
    if day_time &gt; 22
    {
        if 0&lt;zombie_special_wave2_queue
        {
            zombie_special_wave2_queue -= 1
            spawn = 1
        }
    }
    if day_time &gt; 1 and day_time &lt; 6
    {
        if 0&lt;zombie_special_wave3_queue
        {
            zombie_special_wave3_queue -= 1
            spawn = 1
        }
    }
}

if spawn
{
    while(1)
    {
        dis = random_range(zombie_spawn_min,zombie_spawn_max)
        dir = random(360)
        
        xx = obj_player.x + lengthdir_x(dis,dir)
        yy = obj_player.y + lengthdir_y(dis,dir)
        
        if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_solid,1,1) == noone
        {
            if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_action,1,1) == noone
            {
                if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_action_door,1,1) == noone
                {
                    switch(choose(2,3,4,5))
                    {
                        case 2: instance_create(xx,yy,obj_zombie2); break;
                        case 3: instance_create(xx,yy,obj_zombie3); break;
                        case 4: instance_create(xx,yy,obj_zombie4); break;
                        case 5: instance_create(xx,yy,obj_zombie5); break;
                    }
                    break;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>zombie_special_wave_spawn_time</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_number(par_zombie_special) &lt; zombie_special_number
{
    dis = random_range(zombie_spawn_min,zombie_spawn_max)
    dir = random(360)
    
    xx = obj_player.x + lengthdir_x(dis,dir)
    yy = obj_player.y + lengthdir_y(dis,dir)
    
    if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_solid,1,1) == noone
    {
        if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_action,1,1) == noone
        {
            if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_action_door,1,1) == noone
            {
                while (1)
                {
                    if instance_number(par_zombie_special) &lt; 4
                    {
                        switch(choose(2,3,4,5))
                        {
                            case 2: oo = obj_zombie2; break;
                            case 3: oo = obj_zombie3;  break;
                            case 4: oo = obj_zombie4;  break;
                            case 5: oo = obj_zombie5;  break;
                        }
                        if !instance_exists(oo)
                        {
                            instance_create(xx,yy,oo);
                            break;
                        }
                    }
                    else
                    {
                        switch(choose(2,3,4,5))
                        {
                            case 2: instance_create(xx,yy,obj_zombie2); break;
                            case 3: instance_create(xx,yy,obj_zombie3); break;
                            case 4: instance_create(xx,yy,obj_zombie4); break;
                            case 5: instance_create(xx,yy,obj_zombie5); break;
                        }
                        break;
                    }
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>zombie_special_spawn_time</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spawn = 0
if zombie_number_max &gt; instance_number(obj_zombie)
{
    if day_time &gt; 19
    {
        if 0&lt;zombie_wave1_queue
        {
            zombie_wave1_queue -= 1
            spawn = 1
        }
    }
    if day_time &gt; 22
    {
        if 0&lt;zombie_wave2_queue
        {
            zombie_wave2_queue -= 1
            spawn = 1
        }
    }
    if day_time &gt; 1 and day_time &lt; 6
    {
        if 0&lt;zombie_wave3_queue
        {
            zombie_wave3_queue -= 1
            spawn = 1
        }
    }
}

if spawn
{
    while(1)
    {
        dis = random_range(zombie_spawn_min,zombie_spawn_max)
        dir = random(360)
        
        xx = obj_player.x + lengthdir_x(dis,dir)
        yy = obj_player.y + lengthdir_y(dis,dir)
        
        if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_solid,1,1) == noone
        {
            if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_action,1,1) == noone
            {
                if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_action_door,1,1) == noone
                {
                    ins = instance_create(xx,yy,obj_zombie)
                    ins.wave_zombie = 1
                    break;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>zombie_wave_spawn_time</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>while instance_number(obj_zombie) &lt; zombie_number
{
    dis = random_range(zombie_spawn_min,zombie_spawn_max)
    dir = random(360)
    
    xx = obj_player.x + lengthdir_x(dis,dir)
    yy = obj_player.y + lengthdir_y(dis,dir)
    
    if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_solid,1,1) == noone
    {
        if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_action,1,1) == noone
        {
            if collision_rectangle(xx-20,yy-20,xx+20,yy+20,par_action_door,1,1) == noone
            {
                instance_create(xx,yy,obj_zombie)
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>zombie_spawn_time</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !surface_exists(global.lightsurf)
{
    global.lightsurf = surface_create(view_wview[0]/global.surf_ratio, view_hview[0]/global.surf_ratio*2);
}
else
{
    for (i=0; i&lt;instance_number(par_light); i++)
    {
        ins = instance_find(par_light,i)
        surface_set_target(global.lightsurf);
        draw_set_blend_mode(bm_add);
        if ins.light_type == 1
        {
            dir = point_direction(obj_player.x,obj_player.y,ins.x,ins.y)
            dis = point_distance(obj_player.x,obj_player.y,ins.x,ins.y)
            
            dir -= sys_view.view_a

            xx = lengthdir_x(dis,dir)+view_wview[0]/2
            yy = lengthdir_y(dis,dir)+sys_view.view_player_y+sys_view.view_sniper_y+view_hview[0]/2
            
            draw_sprite_ext(spr_light, 0, (xx)/global.surf_ratio, (yy)/global.surf_ratio, ins.light_power/150/global.surf_ratio, ins.light_power/150/global.surf_ratio, 0, ins.light_color, 1);
        }
        if ins.light_type == 2
        {
            dir = point_direction(obj_player.x,obj_player.y,ins.x,ins.y)
            dis = point_distance(obj_player.x,obj_player.y,ins.x,ins.y)
            
            dir -= sys_view.view_a

            xx = lengthdir_x(dis,dir)+view_wview[0]/2
            yy = lengthdir_y(dis,dir)+sys_view.view_player_y+sys_view.view_sniper_y+view_hview[0]/2
            
            draw_sprite_ext(spr_light2, 0, (xx)/global.surf_ratio, (yy)/global.surf_ratio, ins.light_power/150/global.surf_ratio, ins.light_power/150/global.surf_ratio, ins.light_angle-sys_view.view_a, ins.light_color, 1);
            draw_sprite_ext(spr_light, 0, (xx)/global.surf_ratio, (yy)/global.surf_ratio, ins.light_power/300/global.surf_ratio, ins.light_power/200/global.surf_ratio, 0, ins.light_color, 1);
        }
        if ins.light_type == 3
        {
            dir = point_direction(obj_player.x,obj_player.y,ins.x,ins.y)
            dis = point_distance(obj_player.x,obj_player.y,ins.x,ins.y)
            
            dir -= sys_view.view_a

            xx = lengthdir_x(dis,dir)+view_wview[0]/2
            yy = lengthdir_y(dis,dir)+sys_view.view_player_y+sys_view.view_sniper_y+view_hview[0]/2
            
            draw_sprite_ext(spr_light3, 0, (xx)/global.surf_ratio, (yy)/global.surf_ratio, ins.light_power/150/global.surf_ratio, ins.light_power/150/global.surf_ratio, ins.light_angle-sys_view.view_a, ins.light_color, 1);
            draw_sprite_ext(spr_light, 0, (xx)/global.surf_ratio, (yy)/global.surf_ratio, ins.light_power/300/global.surf_ratio, ins.light_power/200/global.surf_ratio, 0, ins.light_color, 1);
        }
        draw_set_blend_mode(bm_normal);
        surface_reset_target();
    }
    
    surface_set_target(global.lightsurf);
    
    draw_set_blend_mode(bm_add);
    draw_set_color($ffffff);
    draw_set_alpha(1-dark_alpha)
    draw_rectangle(0, 0, surface_get_width(global.lightsurf), surface_get_height(global.lightsurf), 0);
    draw_set_alpha(1)
    draw_set_blend_mode(bm_normal);
    
    draw_set_blend_mode_ext(bm_inv_dest_color, bm_inv_src_color);
    draw_set_color($ffffff);
    draw_rectangle(0, 0, surface_get_width(global.lightsurf), surface_get_height(global.lightsurf), 0);
    draw_set_blend_mode(bm_normal);
    
    surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !surface_exists(global.lightsurf)
{
    global.lightsurf = surface_create(view_wview[0]/global.surf_ratio, view_hview[0]/global.surf_ratio*2);
}
else
{
    surface_set_target(global.lightsurf);
    draw_clear(c_black);
    surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// rain
for (i=0;i&lt;rain_number;i++) //falling
{
    if rain_speed &lt; rain[i,2] 
    {
        rain[i,2] -= rain_speed
    }
    else
    {rain[i,2] = 0}
}

if weather == 1 // genrator
{
    for (i=0;i&lt;rain_number;i++) //falling
    {
        if (rain[i,2] == 0)
        {
            rain[i,0] = random(display_get_gui_width()) //x
            rain[i,1] = random(display_get_gui_height()) //y
            rain[i,2] = random(rain_height) //height
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// rain sound
if weather == 1
{
    if !audio_is_playing(snd_rain)
    {
        audio_play_sound(snd_rain,0,1)
    }
}
else
{
    if audio_is_playing(snd_rain)
    {
        audio_stop_sound(snd_rain)
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// time and difficulty
morning_check = 0
wave1_check = 0
wave2_check = 0
wave3_check = 0

game_time += 1

if floor(day_time) == 18 {wave1_check += 1}
if floor(day_time) == 21 {wave2_check += 1}
if floor(day_time) == 0 {wave3_check += 1}
if floor(day_time) == 6 {morning_check += 1}

if day_time &gt; 19 or day_time &lt; 6 // night
{
    day_time += time_speed*1.2
}
else // day
{
    day_time += time_speed*0.8
}

global.day_no_hit += time_speed
if 24&lt;global.day_no_hit
{achievement_plus(15)}

if floor(day_time) == 19 {wave1_check += 1}
if floor(day_time) == 22 {wave2_check += 1}
if floor(day_time) == 1 {wave3_check += 1}
if floor(day_time) == 7 {morning_check += 1}

if morning_check == 2
{
    global.day_attract = 0
    // zombie alarm off unless it's made from waves
    for (i=0;i&lt;instance_number(par_zombie);i++)
    {
        ins = instance_find(par_zombie,i)
        if ins.wave_zombie == 0
        {
            ins.detect = 0
        }
    }
    audio_play_sound(snd_morning,0,0)
    ui_message_type(lang_get("Good morning"))
}
if wave1_check == 2
{
    if global.day_attract == 0
    {
        achievement_plus(18)
    }
    
    audio_play_sound(snd_night,0,0)
    ui_message_type(lang_get("Night is coming"))
    ui_message_type(lang_get("Wave 1"))

}
if wave2_check == 2
{
    audio_play_sound(snd_wave,0,0)
    ui_message_type(lang_get("Wave 2"))
}
if wave3_check == 2
{
    audio_play_sound(snd_wave2,0,0)
    ui_message_type(lang_get("Wave 3"))
}

global.player_survival_day = day

if day_time &gt;= 24
{
    day += 1
    day_time -= 24;
    
    if 50==day
    {
        achievement_plus(17)
    }
    
    if random(100) &lt; weather_percent
    {
        weather = choose(1)
    }
    else
    {
        weather = 0
    }
}

if day&lt;=4
{weather = 0}

difficulty = floor(day/15)
if difficulty &gt; 2 {difficulty = 2}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// zombie number and queueing
if (day &lt; 2)
{
    zombie_number = 5
    zombie_special_number = 0

    zombie_wave1_number = 3
    zombie_wave2_number = 3
    zombie_wave3_number = 6
    
    zombie_special_wave1_number = 0
    zombie_special_wave2_number = 0
    zombie_special_wave3_number = 0
}
else if (day &lt; 4)
{
    zombie_number = 8
    zombie_special_number = 0

    zombie_wave1_number = 5
    zombie_wave2_number = 5
    zombie_wave3_number = 10
    
    zombie_special_wave1_number = 0
    zombie_special_wave2_number = 0
    zombie_special_wave3_number = 0
}
else if (day &lt; 10)
{
    zombie_number = 10
    zombie_special_number = 2
    
    zombie_wave1_number = 12
    zombie_wave2_number = 12
    zombie_wave3_number = 20
    
    zombie_special_wave1_number = 2
    zombie_special_wave2_number = 2
    zombie_special_wave3_number = 2
}
else if (day &lt; 20)
{
    zombie_number = 12
    zombie_special_number = 2
    
    zombie_wave1_number = 20
    zombie_wave2_number = 20
    zombie_wave3_number = 40
    
    zombie_special_wave1_number = 3
    zombie_special_wave2_number = 3
    zombie_special_wave3_number = 3
}
else
{
    zombie_number = 14
    zombie_special_number = 3
    
    zombie_wave1_number = 30
    zombie_wave2_number = 30
    zombie_wave3_number = 50
    
    zombie_special_wave1_number = 4
    zombie_special_wave2_number = 4
    zombie_special_wave3_number = 4
}

if day_time&gt;18 and day_time&lt;18.5
{
    zombie_wave1_queue = zombie_wave1_number
    zombie_wave2_queue = zombie_wave2_number
    zombie_wave3_queue = zombie_wave3_number
    
    zombie_special_wave1_queue = zombie_special_wave1_number
    zombie_special_wave2_queue = zombie_special_wave2_number
    zombie_special_wave3_queue = zombie_special_wave3_number
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// boss spawn
if boss1_day &lt;= day
{
    if point_distance(obj_player.x,obj_player.y,boss1_x,boss1_y)&lt;boss_length
    {
        if !instance_exists(par_boss)
        {
            boss1_day = day + boss_resqawn_day
            instance_create(boss1_x,boss1_y,obj_boss1)
        }
    }
}

if boss2_day &lt;= day
{
    if point_distance(obj_player.x,obj_player.y,boss2_x,boss2_y)&lt;boss_length
    {
        if !instance_exists(par_boss)
        {
            boss2_day = day + boss_resqawn_day
            instance_create(boss2_x,boss2_y,obj_boss2)
        }
    }
}

if boss3_day &lt;= day
{
    if point_distance(obj_player.x,obj_player.y,boss3_x,boss3_y)&lt;boss_length
    {
        if !instance_exists(par_boss)
        {
            boss3_day = day + boss_resqawn_day
            instance_create(boss3_x,boss3_y,obj_boss3)
        }
    }
}

if boss4_day &lt;= day
{
    if point_distance(obj_player.x,obj_player.y,boss4_x,boss4_y)&lt;boss_length
    {
        if !instance_exists(par_boss)
        {
            boss4_day = day + boss_resqawn_day
            instance_create(boss4_x,boss4_y,obj_boss4)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if surface_exists(global.lightsurf)
{
    surface_free(global.lightsurf)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>blue = 0
red = 0
alpha = 0

if (ct1&lt;=day_time and day_time&lt;ct2)
{red = day_time-ct1}
if (ct1&lt;=day_time and day_time&lt;ct2)
{blue = ct2-day_time}

if (ct3&lt;=day_time and day_time&lt;ct4)
{red = ct4-day_time}
if (ct3&lt;=day_time and day_time&lt;ct4)
{blue = day_time-ct3}

if (ct1&lt;=day_time and day_time&lt;6)
{alpha = day_time-ct1}
if (6&lt;=day_time and day_time&lt;ct2)
{alpha = ct2-day_time}

if (ct3&lt;=day_time and day_time&lt;18)
{alpha = day_time-ct3}
if (18&lt;=day_time and day_time&lt;ct4)
{alpha = ct4-day_time}

if (18&lt;=day_time and day_time&lt;24)
{dark_alpha = day_time-18}
if (0&lt;=day_time and day_time&lt;6)
{dark_alpha = 6-day_time}

if weather == 1
{
    dark_alpha = max(0.5,dark_alpha)
}

blue *= 255/(change_time*2)
red *= 255/(change_time*2)

alpha /= change_time/3
alpha /= 8 

dark_alpha *= dark_alpha_max/6 * 3
if dark_alpha &gt; dark_alpha_max {dark_alpha = dark_alpha_max}
if rpg_skill_get_level(16)
{
    if dark_alpha &gt; dark_alpha_max_night_skill {dark_alpha = dark_alpha_max_night_skill}
}

draw_set_color(c_black)
if !surface_exists(global.lightsurf)
{
    global.lightsurf = surface_create(view_wview[0]/global.surf_ratio, view_hview[0]/global.surf_ratio*2);
}
else
{
    draw_set_blend_mode(bm_subtract);
    //draw_surface_ext(global.lightsurf, 0, -display_get_gui_height(), display_get_gui_width()/surface_get_width(global.lightsurf), display_get_gui_height()*2/surface_get_height(global.lightsurf), 0, $ffffff, 1);
    draw_surface_part_ext(global.lightsurf,0,surface_get_height(global.lightsurf)/2,surface_get_width(global.lightsurf),surface_get_height(global.lightsurf)/2,0,0,display_get_gui_width()/surface_get_width(global.lightsurf), display_get_gui_height()*2/surface_get_height(global.lightsurf),c_white,1)
    draw_set_blend_mode(bm_normal);
    
    if (obj_player.weapon_kind == 2 and sys_view.right_button == 1) or obj_player.scope_time &gt; 0
    {
        draw_surface_ext(sys_view.surf,display_get_gui_width()/4,-display_get_gui_height()/6,display_get_gui_width()/surface_get_width(sys_view.surf)/2, display_get_gui_height()/surface_get_height(sys_view.surf)/2,0,c_white,1)
    
        draw_set_blend_mode(bm_subtract);
        draw_surface_part_ext(global.lightsurf,0,0,surface_get_width(global.lightsurf),surface_get_height(global.lightsurf)/2,display_get_gui_width()/4,-display_get_gui_height()/6,display_get_gui_width()/surface_get_width(global.lightsurf)/2, display_get_gui_height()*2/surface_get_height(global.lightsurf)/2,c_white,1)
        draw_set_blend_mode(bm_normal);
    }
}

if 0&lt;alpha
{
    draw_set_alpha(alpha)
    draw_set_color(make_colour_rgb(red,32,blue))
    draw_rectangle(-5,-5,display_get_gui_width()+5, display_get_gui_height()+5, 0)
    draw_set_alpha(1)
    draw_set_color(c_black)
}

draw_set_color(c_black)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// rain

draw_set_color(make_colour_rgb(230,230,230))
for (i=0;i&lt;rain_number;i++) //falling
{
    if 0 &lt; rain[i,2]
    {
        vectorx = (rain[i,0]-display_get_gui_width()/2)/(display_get_gui_width()/2);
        vectory = (rain[i,1]-display_get_gui_height()/2)/(display_get_gui_height()/2);
        
        height = rain[i,2]
        
        //draw the rain drop
        draw_line(rain[i,0]+vectorx*sqr(height) ,rain[i,1]+vectory*sqr(height),rain[i,0]+vectorx*sqr(height+rain_length),rain[i,1]+vectory*sqr(height+rain_length));
    }
}
draw_set_color(c_white)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// no draw
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if weather = 0 {weather = 1}
else {weather = 0}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
