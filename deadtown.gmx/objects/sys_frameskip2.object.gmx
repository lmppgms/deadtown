<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>icon_frameskip</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///FRAMESkip  with ONE Object - BlackOpzFX.com

// To Use: Place ONE [obj_frameskipx] into any room to ENABLE Frame Skippping.

// The Default Settings will Activate Frame Skipping if 10% of frames are missed
// It collects 3x room_speed as the array size to average FPS values. Also Onscreen Display is ON.
// Simply place this object in your room to enable frame skipping

// NOTE: These Default Settings have been TESTED to give the best overall results

SKIP_Frames = false; // SKIPFrames ACTIVE?
ONSCREEN_Stats = false; // Testing Info Onscreen?
MAX_Skips = room_speed/2; // MAX Skips per second (Prevent Skip every Frame Errors) (2+)
FSKIP_ArrayCount = room_speed*3; // How many FPS Frames to Average (2+)
MAXFRAMES_Missed = ceil(room_speed*0.10); // Allow 0.10 (10%) Frame Loss before Activate

alarm[0] = FSKIP_ArrayCount*2

FSKIP_Index = 0; // Index that increments every step - DO NOT CHANGE
SKIPEvery = -1; // SKIP Off by Default - DO NOT CHANGE

//SET FPSIndex[] Array to room_speed 
for(var i = 0; i &lt;FSKIP_ArrayCount; i ++){FPSIndex[i] = room_speed;} FPS=room_speed;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>SKIP_Frames = true;
SKIP_Frames = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update FPS Array - Determine Skip Every...
      
    FSKIP_Index++ ; //Increment per STEP Index Counter
    FSKIP_Index = FSKIP_Index mod FSKIP_ArrayCount; //MOD Index to ArrayCount Numbers (0-ArrayCount)
    FPSIndex[FSKIP_Index] = fps ; //STORE FPS to Array    
    
    if(SKIP_Frames){ //BEGIN
    var X=0; for( var i = 0 ; i &lt;FSKIP_ArrayCount ; i++) //AVERAGE the FPS Stored Values
    {X += FPSIndex[i];} FPS = round(X/FSKIP_ArrayCount); //STORE Average in FPS
    
    var FPSDiff = room_speed-FPS; //COMPUTE - How Many Frames Behind?
    
    //CHECK Frame Rate - If too many frames missed then start skipping every 'X' to catchup
    if (FPSDiff&lt;=MAXFRAMES_Missed) {SKIPEvery = -1;} else {SKIPEvery = ceil(room_speed/FPSDiff);  //If FrameLoss&lt;MAXFRAME then all OK (-1)
    if (room_speed/SKIPEvery&gt;MAX_Skips){SKIPEvery = ceil(room_speed/MAX_Skips);}} //else compute SKIPEvery MOD value to Help Catch Up  
    
    //if MOD==0 (no divide remainder) then Skip Frame else Draw Frame
    if((FSKIP_Index mod SKIPEvery==0) &amp;&amp; SKIPEvery&gt;1){draw_enable_drawevent(false);} else {draw_enable_drawevent(true);}
    } //END
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///FRAMESkip - ENABLE Draw Events and Reset Array

draw_enable_drawevent(true); //ENABLE Drawing - Reset Array to Room_Speed
for(var i=0; i&lt;FSKIP_ArrayCount; i++){FPSIndex[i]=room_speed;}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///OPTIONAL - Draw Stats Onscreen

if(ONSCREEN_Stats){
draw_set_colour(c_white); //SET Onscreen Text Color to WHITE
var STATUS = "FPS Real: " + string(fps_real) + "#Array Average: " + string(FPS) + " / " + string(room_speed);
STATUS += "#Array Index: " + string(FSKIP_Index) + "#"+"Skip Every: "; var S1="DISABLED (user setting) #";
if(SKIPEvery&lt;0 &amp;&amp; SKIP_Frames){S1="No Skip" + "#"} else {if(SKIP_Frames){S1=string(SKIPEvery) + "#"}}; 
STATUS += S1+"FrameSkipX v1.04 - BlackOpzFX.com"; draw_text(view_xview[view_current]+16,view_yview[view_current]+48,STATUS);}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
