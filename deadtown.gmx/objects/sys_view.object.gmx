<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>icon_view</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>par_sys</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///view
view_player_y = 240
view_x = obj_player.x;
view_y = obj_player.y-view_player_y;
view_a = 0;

view_shake_position = 0
view_shake_friction = 4
view_shake_angle = 0
view_shake_closeup = 0

if (os_type == os_android) or 1
{
    device_mouse_dbclick_enable(0);
    
    view_w = view_wview[0]; // 1120
    view_h = view_hview[0]; // 630
    
    view_ratio = view_w/view_h;
    
    if (display_get_width()/display_get_height() &gt; view_ratio)
    {
        view_hview[0] = view_h
        view_wview[0] = view_h*display_get_width()/display_get_height()
    }
    else
    {
        view_hview[0] = view_w*display_get_height()/display_get_width()
        view_wview[0] = view_w
    }
    
    view_xview[0] = view_x-view_wview[0]/2
    view_yview[0] = view_y-view_hview[0]/2
    
    view_wport[0] = view_wview[0]
    view_hport[0] = view_hview[0]
    
    view_w = view_wview[0]
    view_h = view_hview[0]
    
    view_xport[0] = 0
    view_yport[0] = 0
    
    /// sniping view
    
    view_hview[1] = view_hview[0]
    view_wview[1] = view_wview[0]
    
    view_hport[1] = view_hport[0]/2
    view_wport[1] = view_wport[0]/2
    
    view_xport[1] = floor((view_wview[1]-view_wport[1])/2)+1
    view_yport[1] = 0
    
    surf = -1
    if !surface_exists(surf)
    {
        surf = surface_create(view_wview[1], view_hview[1]);
        view_surface_id[1] = surf;
    }

}

view_sniper_y = view_hview[1]


surface_resize(application_surface, view_wview[0], view_hview[0]);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// pc control
if os_type == os_windows
{
    window_mouse_set(window_get_width() / 2, window_get_height() / 2);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// control

////-------- design --------//////
button_alpha = 0.8
button_backpack_alpha = 0.9

////-------- left --------//////
left_press = -1
left_start_x = 0
left_start_y = 0
left_direction = 0
left_distance = 0
left_distance_ratio = 0

setting_left_size = global.setting_left_size*2 + 0.5
setting_left_size /= 1.3
setting_left_relative = global.setting_left_relative

left_max_distance = 60*setting_left_size
left_max_move_distance = 90*setting_left_size
left_max_move_speed = 3*setting_left_size

setting_left_pos = global.setting_left_pos*2 + 0.5
setting_left_pos /= 1.7

left_gap = 180*setting_left_pos
left_gap2 = 220*setting_left_pos

left_gap3 = 220*setting_left_pos
left_gap4 = 100*setting_left_pos

if setting_left_relative == 0
{
    left_start_x = left_gap2
    left_start_y = display_get_height()-left_gap
}

////-------- right --------//////
right_press = -1
right_button_press = -1

right_button = 0
right_button_pressed = 0
right_button_released = 0

right_start_x = 0
right_start_y = 0
right_start_angle = 0

setting_right_sensitive = global.setting_right_size*2 + 0.5
setting_right_sensitive /= 3
setting_right_reverse = 0
setting_right_pos = global.setting_right_pos*2 + 0.5
setting_right_pos /= 1.3

right_gap = 130*setting_right_pos
right_gap2 = 200*setting_right_pos

right_button_radius = 60*setting_right_pos

////-------- action --------//////

action_button_pressed = 0

action_gap = 490*setting_right_pos
action_gap2 = 280*setting_right_pos

action_button_radius = 60*setting_right_pos

////-------- backpack --------//////

setting_middle_size = global.gui_aspect
middle_width = sprite_get_width(spr_backpack_button)*setting_middle_size
middle_height = sprite_get_height(spr_backpack_button)*setting_middle_size
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>(os_type == os_windows) and 0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// pc control
if os_type == os_windows
{
    view_a -= (window_mouse_get_x() - window_get_width()/2)/2
    window_mouse_set(window_get_width() / 2, window_get_height() / 2);
}

right_button = 0
right_button_pressed = 0
right_button_released = 0
if mouse_check_button_pressed(mb_left)
{
    right_button_pressed = 1
}
if mouse_check_button(mb_left)
{
    right_button = 1
}
if mouse_check_button_released(mb_left)
{
    right_button_released = 1
}

action_button_pressed = 0
if mouse_check_button_pressed(mb_right)
{
    action_button_pressed = 1
}

if keyboard_check(vk_escape)
{
    game_end()
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>421</id>
        <kind>3</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// control
right_button_pressed = 0
right_button_released = 0

action_button_pressed = 0

for (i=0;i&lt;5;i++)
{
    if device_mouse_check_button_pressed(i,mb_left)
    {
        if (device_mouse_raw_x(i)&lt;display_get_width()/2) // left
        {
            if left_press &lt; 0
            {
                if setting_left_relative == 0
                {
                    left_start_x = left_gap2
                    left_start_y = display_get_height()-left_gap
                    if point_distance(left_start_x,left_start_y,device_mouse_raw_x(i),device_mouse_raw_y(i)) &lt; left_max_distance
                    {
                        left_press = i
                    }
                }
                else
                {
                    left_press = i
                    left_start_x = device_mouse_raw_x(i)
                    left_start_y = device_mouse_raw_y(i)
                }
            }
        }
        else // right
        {
            if point_distance(display_get_width()-action_gap2,display_get_height()-action_gap,device_mouse_raw_x(i),device_mouse_raw_y(i))&lt;action_button_radius
            {
                action_button_pressed = 1
            }
            if point_distance(display_get_width()-right_gap2,display_get_height()-right_gap,device_mouse_raw_x(i),device_mouse_raw_y(i))&lt;right_button_radius
            {
                right_button_press = i
                right_button_pressed = 1
                right_button = 1
            }
            if right_press &lt; 0
            {
                right_press = i
                right_start_x = device_mouse_raw_x(i)
                right_start_y = device_mouse_raw_y(i)
                right_start_angle = view_a
            }
        }
        
        if device_mouse_raw_y(i) &lt; display_get_height() and display_get_height()-middle_height &lt; device_mouse_raw_y(i)
        {
            if device_mouse_raw_x(i) &lt; display_get_width()/2+middle_width/2 and display_get_width()/2-middle_width/2 &lt; device_mouse_raw_x(i)
            {
                // back pack open
                sys_UI.backpack_order_open = 1
            }
        }
    }
    
    if device_mouse_check_button(i,mb_left)
    {
        if left_press == i
        {
            if setting_left_relative == 0
            {
                left_start_x = left_gap2
                left_start_y = display_get_height()-left_gap
            }
            left_direction = point_direction(left_start_x,left_start_y,device_mouse_raw_x(i),device_mouse_raw_y(i))
            left_distance = point_distance(left_start_x,left_start_y,device_mouse_raw_x(i),device_mouse_raw_y(i))
            
            
            if setting_left_relative == 1
            {
                if left_max_move_distance &lt; left_distance
                {
                    left_start_x += lengthdir_x(left_max_move_speed,left_direction)
                    left_start_y += lengthdir_y(left_max_move_speed,left_direction)
                }
            }
            
            if left_max_distance&lt;left_distance
            {left_distance = left_max_distance}
            left_distance_ratio = left_distance/left_max_distance
        }
        if right_press == i
        {
            if obj_player.vehicle_ins == noone
            {
                if setting_right_reverse
                {
                    view_a = right_start_angle - (device_mouse_raw_x(i) - right_start_x) * setting_right_sensitive * -1
                }
                else
                {
                    view_a = right_start_angle - (device_mouse_raw_x(i) - right_start_x) * setting_right_sensitive
                }
            }
        }
    }
    else
    {
        if left_press == i
        {
            left_press = -1
            left_direction = 0
            left_distance = 0
            left_distance_ratio = 0
        }
        if right_press == i
        {
            right_press = -1
            if right_button
            {
                right_button_released = 1
            }
            right_button_press = -1
        }
    }
    
    if device_mouse_check_button_released(i,mb_left)
    {
        if left_press == i
        {
            left_press = -1
            left_release = 1
            left_direction = 0
            left_distance = 0
            left_distance_ratio = 0
        }
        if right_press == i
        {
            right_press = -1
            if right_button
            {
                right_button_released = 1
            }
            right_button_press = -1
        }
    }
}

if right_button_press == -1
{
    right_button = 0
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// view

view_wview[0] = view_wport[0] - view_shake_closeup*2
view_hview[0] = view_wview[0] * view_hport[0]/view_wport[0]

view_xview[0] = obj_player.x + lengthdir_x(view_player_y,view_a+90) -view_wview[0]/2 +random(view_shake_position*2)-view_shake_position;
view_yview[0] = obj_player.y + lengthdir_y(view_player_y,view_a+90) -view_hview[0]/2 +random(view_shake_position*2)-view_shake_position;
view_angle[0] = -view_a + random(view_shake_angle*2)-view_shake_angle;

view_xview[1] = obj_player.x + lengthdir_x(view_player_y+view_sniper_y,view_a+90) -view_wview[1]/2 +random(view_shake_position*2)-view_shake_position;
view_yview[1] = obj_player.y + lengthdir_y(view_player_y+view_sniper_y,view_a+90) -view_hview[1]/2 +random(view_shake_position*2)-view_shake_position;
view_angle[1] = -view_a + random(view_shake_angle*2)-view_shake_angle;

if (obj_player.weapon_kind == 2 and right_button == 1) or obj_player.scope_time &gt; 0
{
    view_visible[1] = 1
}
else
{
    view_visible[1] = 0
}

if !surface_exists(surf)
{
    surf = surface_create(view_wview[1], view_hview[1]);
    view_surface_id[1] = surf;
}

if view_shake_position&gt;0
{view_shake_position -= view_shake_position/view_shake_friction;}
if view_shake_position&lt;0.1
{view_shake_position = 0}

if view_shake_angle&gt;0
{view_shake_angle -= view_shake_angle/view_shake_friction;}
if view_shake_angle&lt;0.1
{view_shake_angle = 0}

if view_shake_closeup&gt;0
{view_shake_closeup -= view_shake_closeup/view_shake_friction;}
if view_shake_closeup&lt;0.1
{view_shake_closeup = 0}

/// sniping view
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if surface_exists(surf)
{
    surface_free(surf)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// buttons
if left_press &gt;= 0 or setting_left_relative == 0
{
    xx = lengthdir_x(left_distance,left_direction)
    yy = lengthdir_y(left_distance,left_direction)
    draw_sprite_ext(spr_joystick_back,0,left_start_x,left_start_y,setting_left_size,setting_left_size,0,c_white,button_alpha)
    draw_sprite_ext(spr_joystick,0,left_start_x+xx,left_start_y+yy,setting_left_size,setting_left_size,0,c_white,button_alpha)
    
    if left_press &gt;= 0 and 0
    {
        px = left_gap2+left_gap4
        py = display_get_height()-left_gap-left_gap3 
        xx = lengthdir_x(left_distance/2,left_direction)
        yy = lengthdir_y(left_distance/2,left_direction)
        draw_sprite_ext(spr_joystick_back,0,px,py,setting_left_size/2,setting_left_size/2,0,c_white,button_alpha)
        draw_sprite_ext(spr_joystick,0,px+xx,py+yy,setting_left_size/2,setting_left_size/2,0,c_white,button_alpha)
    }
}
draw_sprite_ext(spr_button,0,display_get_width()-right_gap2,display_get_height()-right_gap,setting_right_pos,setting_right_pos,0,c_white,button_alpha)

action_type = -1
if instance_exists(obj_pre_install)
{
    action_type = 1
}
else
{
    if instance_exists(obj_player)
    {
        if obj_player.target_ins != noone
        {
            switch((obj_player.target_ins).object_index)
            {
                case obj_craftdesk: 
                    if (obj_player.target_ins).activated == 1
                    {action_type = 2;}
                break;
                case obj_craftdesk_pro:
                    if (obj_player.target_ins).activated == 1
                    {action_type = 2;};
                break;
                case obj_generator_oil: 
                    {action_type = 7;};
                break;
                case obj_campfire:
                    if (obj_player.target_ins).activated == 1
                    {action_type = 4;}
                    else
                    {action_type = 6;}
                break;
                case obj_brazier:
                    if (obj_player.target_ins).activated == 1
                    {action_type = 3;};
                    else
                    {action_type = 6;}
                break;
                case obj_cooker:
                    if (obj_player.target_ins).activated == 1
                    {action_type = 4;};
                break;
                case obj_brazier_electric:
                    if (obj_player.target_ins).activated == 1
                    {action_type = 3;};
                break;
                case obj_bicycle:
                    {action_type = 5;};
                break;
                case obj_motocycle:
                    {action_type = 5;};
                break;
                
                case obj_bettery:
                    if obj_player.weapon_pointer == obj_player.stun_gun_index
                    {
                        action_type = 9;
                    }
                break;
                
                case obj_turret: break;
                case obj_turret_move: break;
                case obj_lightaction: break;
                case obj_lightaction_move: break;
                case obj_generator_solar: break;
                case obj_generator_nuclear: break;
                case obj_door: break;
                case obj_barricade: break;
                case obj_iron_door: break;
                case obj_iron_barricade: break;
                case obj_trap_electric: break;
                case obj_trap: break;
                case obj_gps: break;
                
                default:
                    {action_type = 0;};
                break;
            }
        }
    }
}

if right_button
{
    draw_sprite_ext(spr_action_button,8,display_get_width()-action_gap2,display_get_height()-action_gap,setting_right_pos,setting_right_pos,0,c_white,button_alpha)
}
else if 0 &lt;= action_type
{
    draw_sprite_ext(spr_action_button,action_type,display_get_width()-action_gap2,display_get_height()-action_gap,setting_right_pos,setting_right_pos,0,c_white,button_alpha)
}

draw_sprite_ext(spr_backpack_button,0,display_get_width()/2,display_get_height(),setting_middle_size,setting_middle_size,0,c_white,button_backpack_alpha)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///effect
alpha = (obj_player.hp_max-obj_player.hp-10) / obj_player.hp_max *0.5
draw_sprite_stretched_ext(spr_bloodeffect,0,0,0,display_get_gui_width(),display_get_gui_height(),c_white,alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// no draw
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="90">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_shake_closeup += 20
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="88">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
view_shake_angle += 20
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="67">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
view_shake_position += 20
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
