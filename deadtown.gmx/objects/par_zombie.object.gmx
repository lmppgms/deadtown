<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="4" ename="obj_trap">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if object_index == obj_zombie5
{if jump {exit}}

if random(100) &lt; 40
{
    if stunned == 0
    {
        stunned = 1
        alarm[1] = stunned_time/4
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_action_door">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// attack
if place_meeting(xprevious,yprevious,par_action)
{
    out_speed = 1
    dir = point_direction(other.x, other.y, x,y)
    
    xx = lengthdir_x(out_speed,dir)
    yy = lengthdir_y(out_speed,dir)
    
    if (!place_meeting(x+xx, y+yy, par_solid))
    {
        x += xx
        y += yy
    }
}
else
{
    x = xprevious
    y = yprevious
}

if stunned == 0
{
    if point_distance(x,y,obj_player.x, obj_player.y)&lt;800
    {
        particle_burst_up(other.particle,x,y,point_direction(other.x,other.y,x,y),30,3)
        
        if choose(0,0,1)
        {
            if other.particle == sys_particle.p_part_wood_up
            {audio_play(snd_wood_broken)}
            if other.particle == sys_particle.p_part_iron_up
            {audio_play(snd_metal_broken)}
        }
        
        stunned = 1
        alarm[1] = stunned_time
        other.shake = 8
        
        other.hp -= damage_cal(damage)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_action">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// attack
if place_meeting(xprevious,yprevious,par_action)
{
    out_speed = 1
    dir = point_direction(other.x, other.y, x,y)
    
    xx = lengthdir_x(out_speed,dir)
    yy = lengthdir_y(out_speed,dir)
    
    if (!place_meeting(x+xx, y+yy, par_solid))
    {
        x += xx
        y += yy
    }
}
else
{
    x = xprevious
    y = yprevious
}


if stunned == 0
{
    if point_distance(x,y,obj_player.x, obj_player.y)&lt;800
    {
        particle_burst_up(other.particle,x,y,point_direction(other.x,other.y,x,y),30,3)
        
        if choose(0,0,1)
        {
            if other.particle == sys_particle.p_part_wood_up
            {audio_play(snd_wood_broken)}
            if other.particle == sys_particle.p_part_iron_up
            {audio_play(snd_metal_broken)}
        }
        
        stunned = 1
        alarm[1] = stunned_time
        other.shake = 8
        
        other.hp -= damage_cal(damage)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_zombie">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if object_index == obj_zombie5
{if jump {exit}}

out_speed = 0.5
dir = point_direction(other.x, other.y, x,y)

xx = lengthdir_x(out_speed,dir)
yy = lengthdir_y(out_speed,dir)

if (!place_meeting(x+xx, y+yy, par_solid))
{
    x += xx
    y += yy
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player_body">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// attack

out_speed = 0.5
dir = point_direction(other.x, other.y, x,y)

xx = lengthdir_x(out_speed,dir)
yy = lengthdir_y(out_speed,dir)

if (!place_meeting(x+xx, y+yy, par_solid))
{
    x += xx
    y += yy
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if object_index == obj_zombie5
{exit}

out_speed = 0.5
dir = point_direction(other.x, other.y, x,y)

xx = lengthdir_x(out_speed,dir)
yy = lengthdir_y(out_speed,dir)

x += xx
y += yy

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
