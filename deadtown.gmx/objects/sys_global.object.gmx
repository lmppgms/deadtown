<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>icon_init</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>par_sys</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///trans
global.trans = 1
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///db
db_init()

// weapon
db_weapon_add("Dagger",spr_noone,ih_dagger,"Small keen knife",7,40,7,0,0,0,1,40,15)
db_weapon_add("Wooden stick",spr_noone,ih_woodenstick,"Stick made of wood",7,40,9,0,0,0,1,60,15)
db_weapon_add("Axe",spr_noone,ih_axe,"Heavy fire axe",7,50,12,0,0,0,1,60,15)
db_weapon_add("Crowbar",spr_noone,ih_crowbar,"Metal bar with a curve",7,30,7,0,0,0,1,60,20)
db_weapon_add("Saw",spr_noone,ih_saw,"Chain with a hard toothed edge",7,20,5,0,0,0,0,50,20)
db_weapon_add("Chainsaw",spr_noone,ih_chainsaw,"Mechanical saw with a rotating chain",7,10,1,0,0,0,0,1,1)
db_weapon_add("Baseball bat",spr_noone,ih_basketballbat,"Wooden club used to hit a baseball",7,50,10,0,0,0,1,60,15)
db_weapon_add("Machete",spr_noone,ih_machete,"Large heavy knife",7,35,8,0,0,0,1,60,20)
db_weapon_add("Golf club",spr_noone,ih_golfclub,"Metal club used to hit a golf ball",7,20,4,0,0,0,1,50,20)
db_weapon_add("Auto pistol",spr_noone,ih_autopistol,"Semi-automatic pistol",2,60,15,5,10,40,1,2,600)
db_weapon_add("Pistol",spr_noone,ih_pistol,"Small non-automatic handgun",2,60,20,10,10,40,0,2,600)
db_weapon_add("Katana",spr_noone,ih_katana,"Sharp light knife",7,30,5,0,0,0,1,60,20)
db_weapon_add("Revolver",spr_noone,ih_revolver,"Powerful handgun that has six shots",2,95,20,10,6,30,0,2,700)
db_weapon_add("Semi auto rifle",spr_noone,ih_semiautorifle,"Semi-automatic rifle",1,110,20,15,20,30,0,2,700)
db_weapon_add("AK-40",spr_noone,ih_ak47,"Powerful assault rifle",1,40,5,5,30,30,1,4,800)
db_weapon_add("M10",spr_noone,ih_m16,"Accurate assault rifle",1,30,3,2,30,30,1,2,800)
db_weapon_add("Pump action shotgun",spr_noone,ih_pumpactionshotgun,"Pump action shotgun. One by one",4,30,20,7,8,10,0,12,400)
db_weapon_add("Semi auto shotgun",spr_noone,ih_semiautoshotgun,"Semi-automatic shotgun",4,20,10,5,10,10,1,10,400)
db_weapon_add("Light machine gun",spr_noone,ih_lightmachinegun,"Light machine gun",3,20,4,2,80,40,1,2,800)
db_weapon_add("Heavy machine gun",spr_noone,ih_heavymachinegun,"Heavy machine gun",3,30,4,1,120,40,1,1,800)
db_weapon_add("Bolt action sniper",spr_noone,ih_boltactionsniper,"Bolt action sniper rifle",5,150,20,5,15,20,0,1,1200)
db_weapon_add("Semi auto sniper",spr_noone,ih_semiautosniper,"Semi-automatic sniper rifle",5,150,15,15,15,20,1,1,1200)
db_weapon_add("Bow",spr_noone,ih_bow,"Classic bow",6,70,30,0,1,0,0,3,300)
db_weapon_add("Cross bow",spr_noone,ih_crossbow,"Powerful horizontal bow",6,100,5,0,1,40,0,2,300)
db_weapon_add("Compound bow",spr_noone,ih_compoundbow,"Modern bow that uses a pulley system,",6,120,30,0,1,0,0,1,400)
db_weapon_add("Flamethrower",spr_noone,ih_flamethrower,"Project a stream of fire",8,5,2,1,100,1,1,1,300)
db_weapon_add("Stun gun",spr_noone,ih_stungun,"Fire electric shock to the nearest zombie ",8,10,10,0,10,10,1,40,400)
db_weapon_add("Stone axe",spr_noone,ih_stoneaxe,"Heavy stone axe",7,30,10,0,0,0,1,60,15)
db_weapon_add("Golden axe",spr_noone,ih_goldenaxe,"Shining golden axe",7,60,11,0,0,0,1,60,15)
db_weapon_add("Golden katana",spr_noone,ih_goldenkatana,"Shining golden katana",7,40,4,0,0,0,1,60,20)

//equip
db_equip_add("Cotton clothes",spr_noone,spr_noone,"Clothes made from cotton",1,1,0)
db_equip_add("Leather jacket",spr_noone,spr_noone,"Jacket made from leather",1,2,-0.5)
db_equip_add("Leather armor",spr_noone,spr_noone,"Armor made from leather",1,3,-1)
db_equip_add("Wooden armor",spr_noone,spr_noone,"Armor made from wood",1,4,-1)
db_equip_add("Steel armor",spr_noone,spr_noone,"Armor made from Steel",1,6,-1.5)
db_equip_add("Plastic armor",spr_noone,spr_noone,"Armor made from plastic",1,4,0)
db_equip_add("Night vision",spr_noone,spr_noone,"Device that enhance night time vision",3,0,0)
db_equip_add("Laser sight",spr_noone,spr_noone,"Laser to enhance the targeting",3,0,0)
db_equip_add("Compass",spr_noone,spr_noone,"Instrument that shows the direction",2,0,0)
db_equip_add("Sundial",spr_noone,spr_noone,"Instrument that shows the time by the shadow of sun",2,0,0)
db_equip_add("Watch",spr_noone,spr_noone,"mechanical device for measuring time",2,0,0)
db_equip_add("Digital Watch",spr_noone,spr_noone,"Electrical device for measuring time",2,0,0)
db_equip_add("Gun silencer",spr_noone,spr_noone,"Device attached to the gun to reduce the noise",3,0,0)
db_equip_add("Flashlight",spr_noone,spr_noone,"Battery-operated portable light",2,0,0)
db_equip_add("Robot suit",spr_noone,spr_noone,"Wearable machine",1,5,1)
db_equip_add("Torchlight",spr_noone,spr_noone,"Portable fire",2,0,0)
db_equip_add("GPS machine",spr_noone,spr_noone,"Device to find geographic position",2,0,0)
db_equip_add("Pigeon",spr_noone,spr_noone,"Pigeon to collect items",4,0,0)
db_equip_add("White pigeon",spr_noone,spr_noone,"White pigeon to collect items",4,0,0)
db_equip_add("Eagle",spr_noone,spr_noone,"Eagle to attack zombies",4,0,0)
db_equip_add("Malamute",spr_noone,spr_noone,"Dog to collect items and attack zombies",4,0,0)
db_equip_add("Carolina",spr_noone,spr_noone,"Dog to collect items and attack zombies",4,0,0)
db_equip_add("Doberman",spr_noone,spr_noone,"Dog to collect items and attack zombies",4,0,0)
db_equip_add("Santa",spr_noone,spr_noone,"Santa costume",4,0,0)
db_equip_add("Zombie",spr_noone,spr_noone,"Zombie costume",4,0,0)
db_equip_add("Cowboy",spr_noone,spr_noone,"Cowboy costume",4,0,0)

//use
db_use_add("Raw meat",spr_noone,"Kind of meat",20,5,0,0,0,1)
db_use_add("Cooked meat",spr_noone,"Delicious cooked meat",30,5,0,0,0,-1)
db_use_add("Potato",spr_noone,"Root vegetable",10,0,0,0,0,3)
db_use_add("Baked potato",spr_noone,"Delicious baked potato",20,0,0,0,0,-1)
db_use_add("Bread",spr_noone,"White bread Easy to eat",20,5,0,0,0,-1)
db_use_add("First aid kit",spr_noone,"Collection of equipment for giving first aid",0,50,0,0,2,-1)
db_use_add("Pain killer",spr_noone,"Drug used to get relief from pain",0,0,0,0,4,-1)
db_use_add("Adrenaline",spr_noone,"You will feel better after a shot",0,0,4,0,0,-1)
db_use_add("Sedative",spr_noone,"You will be able to aim better",0,0,0,4,0,-1)
db_use_add("Canned food",spr_noone,"I have no idea what's in it",25,5,0,0,0,-1)
db_use_add("Frozen pizza",spr_noone,"You need to cook it before eating",15,0,0,0,0,11)
db_use_add("Pizza",spr_noone,"Well-cooked pizza",30,5,0,0,0,-1)
db_use_add("Bandage",spr_noone,"Help you to stop bleeding",0,20,0,0,0,-1)
db_use_add("Frozen meal",spr_noone,"Ready made meal",20,0,0,0,0,14)
db_use_add("Cooked meal",spr_noone,"Ready to eat",30,0,0,0,0,-1)
db_use_add("Mushroom",spr_noone,"Is it toxic?",10,0,0,0,0,16)
db_use_add("Mushroom soup",spr_noone,"Warm soup makes you calm down",20,0,0,0,0,-1)
db_use_add("Apple",spr_noone,"Small red apple",20,0,0,0,0,-1)
db_use_add("Berry",spr_noone,"Kind of berry",15,0,0,0,0,-1)
db_use_add("Rotten meat",spr_noone,"Stinky rotten meat",20,-10,0,0,0,-1)




//craft
db_craft_add(2,4,23,5,4,26,3,0,0,0,1,0,1,1,0)
db_craft_add(2,4,23,8,0,0,0,0,0,0,1,1,1,0,0)
db_craft_add(2,4,23,10,4,26,5,0,0,0,1,2,1,1,0)
db_craft_add(2,4,26,10,0,0,0,0,0,0,1,3,1,1,0)
db_craft_add(2,4,23,5,4,26,10,0,0,0,1,4,1,1,0)
db_craft_add(2,1,4,1,4,26,5,4,37,1,1,5,1,0,1)
db_craft_add(2,4,23,10,0,0,0,0,0,0,1,6,1,1,0)
db_craft_add(2,4,23,5,4,26,10,0,0,0,1,7,1,1,0)
db_craft_add(2,4,26,10,0,0,0,0,0,0,1,8,1,1,0)
db_craft_add(2,1,10,1,4,30,3,0,0,0,1,9,1,0,1)
db_craft_add(2,4,23,3,4,26,10,4,29,1,1,10,1,1,0)
db_craft_add(2,4,23,2,4,26,12,0,0,0,1,11,1,1,0)
db_craft_add(2,1,10,1,4,30,3,4,29,2,1,12,1,0,1)
db_craft_add(2,4,26,15,4,30,5,4,29,2,1,13,1,1,0)
db_craft_add(2,1,13,1,4,30,5,0,0,0,1,14,1,0,1)
db_craft_add(2,1,13,1,4,30,5,0,0,0,1,15,1,0,1)
db_craft_add(2,4,26,20,4,30,5,4,29,2,1,16,1,1,0)
db_craft_add(2,1,16,1,4,30,5,0,0,0,1,17,1,0,1)
db_craft_add(2,4,26,20,4,30,10,4,29,2,1,18,1,1,0)
db_craft_add(2,1,18,1,4,30,10,0,0,0,1,19,1,0,1)
db_craft_add(2,4,26,15,4,30,3,4,29,1,1,20,1,1,0)
db_craft_add(2,1,20,1,4,30,3,0,0,0,1,21,1,0,1)
db_craft_add(2,4,23,10,4,34,5,0,0,0,1,22,1,1,0)
db_craft_add(2,1,22,1,4,30,3,0,0,0,1,23,1,0,1)
db_craft_add(2,1,22,1,4,30,5,4,29,2,1,24,1,0,1)
db_craft_add(2,4,36,3,4,30,5,4,29,1,1,26,1,0,1)
db_craft_add(2,4,23,10,4,24,5,0,0,0,1,27,1,0,0)
db_craft_add(3,4,34,5,0,0,0,0,0,0,2,0,1,1,0)
db_craft_add(3,4,34,5,4,41,5,0,0,0,2,1,1,1,0)
db_craft_add(3,4,41,10,0,0,0,0,0,0,2,2,1,1,0)
db_craft_add(3,4,23,15,0,0,0,0,0,0,2,3,1,1,0)
db_craft_add(3,4,26,15,0,0,0,0,0,0,2,4,1,1,0)
db_craft_add(3,4,31,1,4,30,10,4,29,2,2,6,1,0,1)
db_craft_add(3,2,13,1,4,30,5,4,29,1,2,7,1,0,1)
db_craft_add(3,4,26,5,4,29,1,0,0,0,2,8,1,1,0)
db_craft_add(3,4,23,5,4,29,1,0,0,0,2,9,1,1,0)
db_craft_add(3,4,26,5,4,30,5,4,29,1,2,10,1,0,1)
db_craft_add(3,4,35,1,4,30,5,4,29,1,2,11,1,0,1)
db_craft_add(3,4,26,5,4,34,5,4,29,1,2,12,1,1,0)
db_craft_add(3,4,32,1,4,31,1,4,29,1,2,13,1,0,1)
db_craft_add(3,2,4,1,4,35,1,4,29,3,2,14,1,0,1)
db_craft_add(3,4,23,10,4,34,8,0,0,0,2,15,1,1,0)
db_craft_add(4,4,34,10,0,0,0,0,0,0,3,12,1,1,0)
db_craft_add(1,4,23,10,0,0,0,0,0,0,4,0,1,0,0)
db_craft_add(1,4,23,10,4,26,15,0,0,0,4,1,1,1,0)
db_craft_add(1,1,13,1,4,30,5,4,29,1,4,2,1,0,1)
db_craft_add(1,1,15,1,4,38,1,4,35,1,4,3,1,0,1)
db_craft_add(1,4,32,1,4,30,5,4,29,1,4,4,1,0,1)
db_craft_add(1,4,32,1,4,38,1,4,35,1,4,5,1,0,1)
db_craft_add(1,4,31,5,0,0,0,0,0,0,4,6,1,0,1)
db_craft_add(1,4,42,5,4,29,1,0,0,0,4,7,1,0,1)
db_craft_add(1,4,43,3,4,26,10,4,29,2,4,8,1,0,1)
db_craft_add(1,4,37,1,4,26,10,4,29,1,4,9,1,0,1)
db_craft_add(1,4,23,8,0,0,0,0,0,0,4,10,1,1,0)
db_craft_add(1,4,23,8,0,0,0,0,0,0,4,11,1,1,0)
db_craft_add(1,4,26,8,0,0,0,0,0,0,4,12,1,1,0)
db_craft_add(1,4,26,8,0,0,0,0,0,0,4,13,1,1,0)
db_craft_add(1,4,23,10,0,0,0,0,0,0,4,14,1,0,0)
db_craft_add(1,4,23,10,4,24,10,0,0,0,4,15,1,0,0)
db_craft_add(1,4,36,1,4,30,5,4,29,1,4,16,1,0,1)
db_craft_add(1,4,26,5,4,29,1,0,0,0,4,17,1,1,0)
db_craft_add(1,2,8,1,4,30,5,4,29,1,4,18,1,0,1)
db_craft_add(1,4,26,5,4,30,5,4,29,1,4,19,1,0,1)
db_craft_add(1,4,26,10,4,30,5,4,29,1,4,20,1,0,1)
db_craft_add(1,4,26,20,4,30,5,4,29,1,4,21,1,1,0)
db_craft_add(1,4,26,20,4,37,1,4,30,10,4,22,1,0,1)
db_craft_add(1,4,23,10,4,32,1,4,29,1,4,39,1,0,1)
db_craft_add(1,4,26,10,4,32,1,4,29,1,4,40,1,0,1)
db_craft_add(4,4,26,1,4,28,1,0,0,0,4,30,2,1,0)
db_craft_add(5,4,26,5,4,33,5,0,0,0,4,44,200,0,1)
db_craft_add(5,4,26,5,4,33,5,0,0,0,4,45,60,0,1)
db_craft_add(5,4,26,5,4,33,5,0,0,0,4,46,600,0,1)
db_craft_add(5,4,26,5,4,23,5,0,0,0,4,47,50,1,0)
db_craft_add(3,2,8,1,4,30,5,4,35,1,2,16,1,0,1)
db_craft_add(2,4,23,10,4,28,5,0,0,0,1,28,1,0,1)
db_craft_add(2,4,23,2,4,28,12,0,0,0,1,29,1,0,1)


//etc
db_etc_add("Craft desk",spr_noone,"Basic craft desk. In order to make items",-1)
db_etc_add("Pro craft desk",spr_noone,"Professional craft desk used to make advanced items",-1)
db_etc_add("Turret",spr_noone,"Automatic gun machine used to defend the point",-1)
db_etc_add("Turret drone",spr_noone,"Flying turret. It will follow and protect you",-1)
db_etc_add("Lamp",spr_noone,"Elrectic lamp to provide light at night",-1)
db_etc_add("Lamp drone",spr_noone,"Flying lamp. It will follow you and provide powerful light",-1)
db_etc_add("Battery box",spr_noone,"Cells used to power electrical devices",-1)
db_etc_add("Solar generator",spr_noone,"Generating electricity by solar panels",-1)
db_etc_add("Nuclear reactor",spr_noone,"Device used to control a nuclear reaction. Permanent generator",-1)
db_etc_add("Oil generator",spr_noone,"Generator used to make electricity by using oil",-1)
db_etc_add("Wooden barricade",spr_noone,"Wooden wall used to block the way",-1)
db_etc_add("Wooden door",spr_noone,"Wooden door only for you. Zombies can't go through",-1)
db_etc_add("Steel barricade",spr_noone,"Steel wall used to block the way",-1)
db_etc_add("Steel door",spr_noone,"Steel door only for you. Zombies can't go through",-1)
db_etc_add("Campfire",spr_noone,"Fire that provides light and heat for cooking",-1)
db_etc_add("Brazier",spr_noone,"Fire that provides light and heat for smelting",-1)
db_etc_add("Electric turret",spr_noone,"Turret that uses electric shock to defend the point",-1)
db_etc_add("Trap",spr_noone,"Trap makes zombies slow down",-1)
db_etc_add("signal generator",spr_noone,"Machine that generate GPS signal for you to find home",-1)
db_etc_add("Cooker",spr_noone,"Electric cooker that provides heat for cooking",-1)
db_etc_add("Electric furnace",spr_noone,"Electric machine that provides heat for smelting",-1)
db_etc_add("Bicycle",spr_noone,"Handmade bicycle. Better than walking",-1)
db_etc_add("Motorcycle",spr_noone,"Powered by a motor, using oil",-1)
db_etc_add("Wood",spr_noone,"Wood. Basic material",-1)
db_etc_add("Stone",spr_noone,"Stone. Basic material",-1)
db_etc_add("Piece of steel ",spr_noone,"Small piece that can be used to make steel",26)
db_etc_add("Steel",spr_noone,"Strong metal",-1)
db_etc_add("Piece of gold",spr_noone,"Small piece that can be used to make gold",28)
db_etc_add("Gold",spr_noone,"Shiny yellow metal",-1)
db_etc_add("Blueprint",spr_noone,"Technical drawing",-1)
db_etc_add("Machine parts",spr_noone,"Parts of machine",26)
db_etc_add("Battery",spr_noone,"Cell that can keep electricity",-1)
db_etc_add("Bulb",spr_noone,"Glass bulb inserted into a lamp or a socket",-1)
db_etc_add("Gunpowder",spr_noone,"Explosive powder of mixture",-1)
db_etc_add("Cloth",spr_noone,"Fabric made from cotton",-1)
db_etc_add("Computer chip",spr_noone,"Electronic device for processing data",28)
db_etc_add("Voltage circuit",spr_noone,"Circuit for making extremely high voltage",-1)
db_etc_add("Engine",spr_noone,"Machine that converts power into motion",-1)
db_etc_add("Drone",spr_noone,"Flying robot",-1)
db_etc_add("Night Craft desk",spr_noone,"Can make items at night",-1)
db_etc_add("Night pro craft desk",spr_noone,"Can make advanced items at night",-1)
db_etc_add("Leather",spr_noone,"Material made from the skin of an animal",-1)
db_etc_add("Solar panel",spr_noone,"Panel used to absorb the sunlight and generate electricity",-1)
db_etc_add("Radioactive material",spr_noone,"Material that has radioactive energy",-1)
db_etc_add("Normal ammo",spr_noone,"Ammo for rifle and pistol",-1)
db_etc_add("Shotgun ammo",spr_noone,"Ammo for shotgun",-1)
db_etc_add("Machinegun ammo",spr_noone,"Ammo for machinegun",-1)
db_etc_add("Arrow",spr_noone,"Arrow for bow",-1)
db_etc_add("Oil",spr_noone,"Liquid for use as a fuel",-1)



//skill
db_skill_add("Health","Health increases",1,3)
db_skill_add("Recovery","Recovery increases",1,3)
db_skill_add("Knockback","Knockback increases",2,1)
db_skill_add("Melee damage","Melee damage increases",2,2)
db_skill_add("Quick reload","Roload becomes faster",2,1)
db_skill_add("Shooting skill","Accuracy improves",2,1)
db_skill_add("Robin Hood","Bow accuracy improves",2,1)
db_skill_add("Trot","Speed increases",1,3)
db_skill_add("Patience","Hungry decreases",1,3)
db_skill_add("Pickpocket","Zombies drop more items",3,1)
db_skill_add("Theif","Find more items",3,1)
db_skill_add("Chef","A chance to get more foods",3,2)
db_skill_add("Dwarf","A chance to get more metal",3,2)
db_skill_add("Robotics","Turret reinforced",3,1)
db_skill_add("Engineering","Generator reinforced",3,1)
db_skill_add("Cat","Footsteps sound decreases",1,1)
db_skill_add("Nocturnal","Night vision increases",1,1)
db_skill_add("Repairman","Repair speed increases",3,1)
db_skill_add("Move shooting","Accuracy improves with moving",2,1)
db_skill_add("Head shooter","Able to shot heads",2,1)
db_skill_add("Poison immunity","Get less damage from poison",1,1)



////////////
rpg_init()

item_init()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// db spawn
db_spawn_init()

db_spawn_add(0,4,23,2,5)
db_spawn_add(0,4,24,1,3)
db_spawn_add(0,4,25,2,5)
db_spawn_add(0,4,29,0.4,0.4)
db_spawn_add(0,4,30,1,2)
db_spawn_add(0,4,31,0.3,0.3)
db_spawn_add(0,4,44,5,10)
db_spawn_add(0,4,45,5,10)
db_spawn_add(0,4,46,15,25)
db_spawn_add(0,4,47,1,2)
db_spawn_add(0,4,48,7,12)
db_spawn_add(0,4,38,0.1,0.1)
db_spawn_add(0,4,34,0.5,0.5)
db_spawn_add(0,4,37,0.15,0.15)
db_spawn_add(0,4,27,0.1,0.1)
db_spawn_add(0,4,33,0.3,0.3)
db_spawn_add(0,3,17,0.25,0.25)
db_spawn_add(0,3,18,0.25,0.25)
db_spawn_add(1,4,23,2,3)
db_spawn_add(1,4,24,2,3)
db_spawn_add(1,4,25,1,2)
db_spawn_add(1,4,27,0.1,0.1)
db_spawn_add(1,4,29,1,1)
db_spawn_add(1,4,31,0.2,0.2)
db_spawn_add(1,4,32,0.4,0.4)
db_spawn_add(1,4,34,1,1)
db_spawn_add(1,4,41,1,1)
db_spawn_add(1,4,48,10,15)
db_spawn_add(1,3,0,1,1)
db_spawn_add(1,3,4,1,1)
db_spawn_add(1,3,9,1,1)
db_spawn_add(2,4,25,2,3)
db_spawn_add(2,4,27,0.1,0.1)
db_spawn_add(2,4,29,1,1)
db_spawn_add(2,4,31,0.2,0.2)
db_spawn_add(2,4,32,0.4,0.4)
db_spawn_add(2,4,34,1,1)
db_spawn_add(2,4,41,1,1)
db_spawn_add(2,4,48,10,15)
db_spawn_add(2,4,30,1,3)
db_spawn_add(2,4,35,0.2,0.2)
db_spawn_add(2,4,36,0.1,0.1)
db_spawn_add(2,4,38,0.1,0.1)
db_spawn_add(2,4,41,1,2)
db_spawn_add(2,4,48,10,15)
db_spawn_add(2,4,42,0.5,0.5)
db_spawn_add(2,4,43,0.5,0.5)
db_spawn_add(3,4,23,2,3)
db_spawn_add(3,4,24,2,3)
db_spawn_add(3,4,25,1,2)
db_spawn_add(3,4,27,0.1,0.1)
db_spawn_add(3,4,29,2,5)
db_spawn_add(3,4,31,0.5,0.5)
db_spawn_add(3,4,32,0.5,0.5)
db_spawn_add(3,4,34,1,1)
db_spawn_add(3,4,41,1,1)
db_spawn_add(3,4,48,1,5)
db_spawn_add(3,3,12,1,1)
db_spawn_add(3,3,4,1,2)
db_spawn_add(3,3,9,1,2)
db_spawn_add(4,4,34,2,3)
db_spawn_add(4,3,5,0.1,0.1)
db_spawn_add(4,3,6,0.2,0.2)
db_spawn_add(4,3,7,0.2,0.2)
db_spawn_add(4,3,8,0.2,0.2)
db_spawn_add(4,3,12,0.5,0.5)
db_spawn_add(5,4,32,1,1)
db_spawn_add(5,4,38,0.1,0.1)
db_spawn_add(5,3,0,1,1)
db_spawn_add(5,3,2,1,1)
db_spawn_add(5,3,4,1,1)
db_spawn_add(5,3,9,1,1)
db_spawn_add(5,3,10,1,1)
db_spawn_add(5,3,13,1,1)
db_spawn_add(5,3,15,1,1)
db_spawn_add(5,3,17,1,1)
db_spawn_add(5,3,18,1,1)
db_spawn_add(5,4,48,20,30)
db_spawn_add(6,3,5,0.1,0.1)
db_spawn_add(6,3,6,0.1,0.1)
db_spawn_add(6,3,7,0.1,0.1)
db_spawn_add(6,3,8,0.1,0.1)
db_spawn_add(6,3,12,0.5,0.5)
db_spawn_add(6,4,34,1,2)
db_spawn_add(6,4,41,1,1)
db_spawn_add(7,4,32,1,1)
db_spawn_add(7,4,38,0.1,0.1)
db_spawn_add(7,3,0,1,1)
db_spawn_add(7,3,2,1,2)
db_spawn_add(7,3,4,1,1)
db_spawn_add(7,3,9,1,2)
db_spawn_add(7,3,10,1,1)
db_spawn_add(7,3,13,1,1)
db_spawn_add(7,3,15,1,1)
db_spawn_add(7,3,17,1,1)
db_spawn_add(7,3,18,1,1)
db_spawn_add(7,3,5,0.05,0.05)
db_spawn_add(7,3,6,0.05,0.05)
db_spawn_add(7,3,7,0.05,0.05)
db_spawn_add(7,3,8,0.05,0.05)
db_spawn_add(7,3,12,0.5,0.5)
db_spawn_add(7,4,35,0.5,0.5)
db_spawn_add(7,4,36,0.5,0.5)
db_spawn_add(8,3,0,1,1)
db_spawn_add(8,3,2,1,1)
db_spawn_add(8,3,4,1,1)
db_spawn_add(8,3,9,1,1)
db_spawn_add(8,3,10,1,1)
db_spawn_add(8,3,13,1,1)
db_spawn_add(8,3,15,1,1)
db_spawn_add(8,3,17,1,1)
db_spawn_add(8,3,18,1,1)
db_spawn_add(8,3,12,0.5,0.5)
db_spawn_add(9,4,33,3,5)
db_spawn_add(9,4,44,10,20)
db_spawn_add(9,4,45,10,20)
db_spawn_add(9,4,46,20,50)
db_spawn_add(9,1,10,0.1,0.1)
db_spawn_add(9,1,13,0.1,0.1)
db_spawn_add(10,4,34,5,10)
db_spawn_add(10,4,41,1,3)
db_spawn_add(10,2,0,0.1,0.1)
db_spawn_add(10,2,1,0.1,0.1)
db_spawn_add(11,3,11,1,2)
db_spawn_add(11,3,14,1,2)
db_spawn_add(11,3,16,1,2)
db_spawn_add(11,3,1,1,2)


db_spawn_cal()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// lang UI
lang_init()
lang_add("Craft","제작","","")
lang_add("Item","아이템","","")
lang_add("Skill","스킬","","")
lang_add("Placeable","설치","","")
lang_add("Weapon","무기","","")
lang_add("Equipment","장비","","")
lang_add("Etc","기타","","")
lang_add("Ammo","탄약","","")
lang_add("Usable","소비","","")
lang_add("Survival","생존","","")
lang_add("Fighting","전투","","")
lang_add("Material","재료","","")
lang_add("Make","제작","","")
lang_add("Equip","장착","","")
lang_add("Drop","버림","","")
lang_add("Use","사용","","")
lang_add("Cook","요리","","")
lang_add("Melt","녹임","","")
lang_add("Learn","배움","","")
lang_add("Attack","공격력","","")
lang_add("Defense","방어력","","")
lang_add("Rate of fire","연사속도","","")
lang_add("Recoil","반동","","")
lang_add("Round","탄창","","")
lang_add("Health recovery","체력 회복","","")
lang_add("Hunger recovery","허기 회복","","")
lang_add("Speed","이동 속도","","")
lang_add("Reloading","재장전","","")
lang_add("Skill point","스킬 포인트","","")

lang_add("Centipede","센티피드","","")
lang_add("Rafflesia","라플레시아","","")
lang_add("Giant","자이언트","","")
lang_add("Hedgehog","고슴도치","","")

lang_add("Game over#Continue?","부활하시겠습니까?","","")
lang_add("Would you watch a short video#to get a bonus parcel?","짧은 동영상을 보고#보너스 아이템을 받으시겠습니까?","","")
lang_add("Price","가격","","")
lang_add("Are you sure#you want to quit?","종료하시겠습니까?","","")
lang_add("You don't have enough money","돈이 부족합니다","","")
lang_add("Would you rate our game?","별점을 남겨주시겠습니까?","","")
lang_add("Do you want to#watch the tutorial?","튜토리얼을#보시겠습니까?","","")

lang_add("Level UP","레벨 업","","")
lang_add("Night is coming","밤이 찾아왔습니다","","")
lang_add("Good morning","아침이 찾아왔습니다","","")
lang_add("Wave 1","Wave 1","","")
lang_add("Wave 2","Wave 2","","")
lang_add("Wave 3","Wave 3","","")
lang_add("You killed it","죽였습니다","","")

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// lang Item
lang_add("Dagger","단검","","")
lang_add("Wooden stick","나무 막대기","","")
lang_add("Axe","도끼","","")
lang_add("Crowbar","크로우바","","")
lang_add("Saw","톱","","")
lang_add("Chainsaw","전기톱","","")
lang_add("Baseball bat","야구 방망이","","")
lang_add("Machete","마체테","","")
lang_add("Golf club","골프 클럽","","")
lang_add("Auto pistol","자동 권총","","")
lang_add("Pistol","권총","","")
lang_add("Katana","일본도","","")
lang_add("Revolver","리볼버","","")
lang_add("Semi auto rifle","반자동 소총","","")
lang_add("AK-40","AK-40","","")
lang_add("M10","M10","","")
lang_add("Pump action shotgun","펌프 액션 샷건","","")
lang_add("Semi auto shotgun","반자동 샷건","","")
lang_add("Light machine gun","라이트 머신건","","")
lang_add("Heavy machine gun","헤비 머신건","","")
lang_add("Bolt action sniper","볼트 액션 스나","","")
lang_add("Semi auto sniper","반자동 스나","","")
lang_add("Bow","활","","")
lang_add("Cross bow","석궁","","")
lang_add("Compound bow","복합활","","")
lang_add("Flamethrower","화염방사기","","")
lang_add("Stun gun","스턴 건","","")
lang_add("Stone axe","돌 도끼","","")
lang_add("Cotton clothes","천 옷","","")
lang_add("Leather jacket","가죽 자켓","","")
lang_add("Leather armor","가죽 갑옷","","")
lang_add("Wooden armor","나무 갑옷","","")
lang_add("Steel armor","철 갑옷","","")
lang_add("Plastic armor","플라스틱 갑옷","","")
lang_add("Night vision","야간 투시경","","")
lang_add("Laser sight","레이저 사이트","","")
lang_add("Compass","나침반","","")
lang_add("Sundial","해시계","","")
lang_add("Watch","시계","","")
lang_add("Digital Watch","전자시계","","")
lang_add("Gun silencer","소음기","","")
lang_add("Flashlight","손전등","","")
lang_add("Robot suit","로봇 슈트","","")
lang_add("Torchlight","횃불","","")
lang_add("Raw meat","생고기","","")
lang_add("Cooked meat","요리된 고기","","")
lang_add("Potato","감자","","")
lang_add("Baked potato","구운 감자","","")
lang_add("Bread","빵","","")
lang_add("First aid kit","응급처치 키트","","")
lang_add("Pain killer","진통제","","")
lang_add("Adrenaline","아드레날린","","")
lang_add("Sedative","진정제","","")
lang_add("Canned food","통조림","","")
lang_add("Frozen pizza","냉동피자","","")
lang_add("Pizza","피자","","")
lang_add("Bandage","붕대","","")
lang_add("Frozen meal","냉동식품","","")
lang_add("Cooked meal","조리된 식품","","")
lang_add("Mushroom","버섯","","")
lang_add("Mushroom soup","버섯 스프","","")
lang_add("Apple","사과","","")
lang_add("Berry","산딸기","","")
lang_add("Craft desk","작업대","","")
lang_add("Pro craft desk","고급 작업대","","")
lang_add("Turret","터렛","","")
lang_add("Turret drone","터렛 드론","","")
lang_add("Lamp","조명","","")
lang_add("Lamp drone","조명 드론","","")
lang_add("Battery box","배터리","","")
lang_add("Solar generator","태양광 발전기","","")
lang_add("Nuclear reactor","원자력 발전기","","")
lang_add("Oil generator","기름 발전기","","")
lang_add("Wooden barricade","나무 바리케이드","","")
lang_add("Wooden door","나무 문","","")
lang_add("Steel barricade","철 바리케이드","","")
lang_add("Steel door","철 문","","")
lang_add("Campfire","캠프파이어","","")
lang_add("Brazier","화로","","")
lang_add("Electric turret","전기 터렛","","")
lang_add("Trap","덫","","")
lang_add("signal generator","신호 발생기","","")
lang_add("Cooker","전기렌지","","")
lang_add("Electric furnace","전기화로","","")
lang_add("Bicycle","자전거","","")
lang_add("Motorcycle","오토바이","","")
lang_add("Wood","나무","","")
lang_add("Stone","돌","","")
lang_add("Piece of steel ","철 조각","","")
lang_add("Steel","철","","")
lang_add("Piece of gold","금 조각","","")
lang_add("Gold","금","","")
lang_add("Blueprint","설계도","","")
lang_add("Machine parts","기계부품","","")
lang_add("Battery","건전지","","")
lang_add("Bulb","전구","","")
lang_add("Gunpowder","화약","","")
lang_add("Cloth","천","","")
lang_add("Computer chip","컴퓨터 칩","","")
lang_add("Voltage circuit","전압 회로","","")
lang_add("Engine","엔진","","")
lang_add("Drone","드론","","")
lang_add("Night Craft desk","야간 작업대","","")
lang_add("Night pro craft desk","야간 고급 작업대","","")
lang_add("Leather","가죽","","")
lang_add("Solar panel","태양광 패널","","")
lang_add("Radioactive material","방사능 물질","","")
lang_add("Normal ammo","일반 탄약","","")
lang_add("Shotgun ammo","샷건 탄약","","")
lang_add("Machinegun ammo","머신건 탄약","","")
lang_add("Arrow","화살","","")
lang_add("Oil","기름","","")
lang_add("Rotten meat","썩은 고기","","")
lang_add("GPS machine","GPS 장치","","")
lang_add("Pigeon","비둘기","","")
lang_add("White pigeon","흰비둘기","","")
lang_add("Eagle","독수리","","")
lang_add("Carolina","캐롤라이나","","")
lang_add("Malamute","말라뮤트","","")
lang_add("Doberman","도베르만","","")
lang_add("Santa","산타","","")
lang_add("Zombie","좀비","","")
lang_add("Cowboy","카우보이","","")
lang_add("Golden axe","금 도끼","","")
lang_add("Golden katana","금 일본도","","")


lang_add("Small keen knife","작고 예리한 칼","","")
lang_add("Stick made of wood","나무로 만들어진 막대기","","")
lang_add("Heavy fire axe","무거운 소방 도끼","","")
lang_add("Metal bar with a curve","끝이 휘어진 금속 막대기","","")
lang_add("Chain with a hard toothed edge","목재용 톱","","")
lang_add("Mechanical saw with a rotating chain","엔진으로 회전하는 체인이 달린 톱","","")
lang_add("Wooden club used to hit a baseball","야구공을 치기 위해 나무 막대","","")
lang_add("Large heavy knife","크고 무거운 칼","","")
lang_add("Metal club used to hit a golf ball","골프공을 치기 위한 금속 막대","","")
lang_add("Semi-automatic pistol","반자동 권총","","")
lang_add("Small non-automatic handgun","작은 수동 권총","","")
lang_add("Sharp light knife","날카롭고 가벼운 칼","","")
lang_add("Powerful handgun that has six shots","6발의 강력한 권총","","")
lang_add("Semi-automatic rifle","반자동 라이플","","")
lang_add("Powerful assault rifle","강력한 라이플","","")
lang_add("Accurate assault rifle","정확한 라이플","","")
lang_add("Pump action shotgun. One by one","펌프액션 샷건","","")
lang_add("Semi-automatic shotgun","반자동 샷건","","")
lang_add("Light machine gun","라이트 머신 건","","")
lang_add("Heavy machine gun","헤비 머신 건","","")
lang_add("Bolt action sniper rifle","볼트 액션 스나이퍼 라이플","","")
lang_add("Semi-automatic sniper rifle","반자동 스나이퍼 라이플","","")
lang_add("Classic bow","전통적인 활","","")
lang_add("Powerful horizontal bow","강한 수평 활","","")
lang_add("Modern bow that uses a pulley system,","도르래를 사용하는 발전된 활","","")
lang_add("Project a stream of fire","불을 발사하는 무기","","")
lang_add("Fire electric shock to the nearest zombie ","가까운 좀비에게 전기 충격을 쏜다","","")
lang_add("Heavy stone axe","무거운 돌도끼","","")
lang_add("Clothes made from cotton","천으로 만들어진 옷","","")
lang_add("Jacket made from leather","가죽으로 만들어진 재킷","","")
lang_add("Armor made from leather","가죽으로 만들어진 갑옷","","")
lang_add("Armor made from wood","나무로 만들어진 갑옷","","")
lang_add("Armor made from Steel","철로 만들어진 갑옷","","")
lang_add("Armor made from plastic","플라스틱으로 만들어진 갑옷","","")
lang_add("Device that enhance night time vision","야간 시야를 강화시켜주는 장치","","")
lang_add("Laser to enhance the targeting","조준을 강화시켜주는 레이저 장치","","")
lang_add("Instrument that shows the direction","방향을 보여주는 장치","","")
lang_add("Instrument that shows the time by the shadow of sun","해의 그림자로 시간을 알려주는 장치","","")
lang_add("mechanical device for measuring time","시간을 알게 해주는 기계 장치","","")
lang_add("Electrical device for measuring time","시간을 알게 해주는 전기 장치","","")
lang_add("Device attached to the gun to reduce the noise","총에 붙여서 소리를 줄여주는 장치","","")
lang_add("Battery-operated portable light","배터리로 작동되는 이동식 전등","","")
lang_add("Wearable machine","입을 수 있는 기계","","")
lang_add("Portable fire","이동 가능한 불","","")
lang_add("Kind of meat","고기의 일종","","")
lang_add("Delicious cooked meat","맛있게 요리된 고기","","")
lang_add("Root vegetable","뿌리 식물","","")
lang_add("Delicious baked potato","맛있게 요리된 감자","","")
lang_add("White bread Easy to eat","먹기 좋은 흰 빵","","")
lang_add("Collection of equipment for giving first aid","응급 처치를 위한 도구 모음","","")
lang_add("Drug used to get relief from pain","고통을 줄여주는 약물","","")
lang_add("You will feel better after a shot","한 대 맞으면 괜찮아질거에요","","")
lang_add("You will be able to aim better","더 조준을 잘하게 도와주는 약물","","")
lang_add("I have no idea what's in it","안에 무엇이 들어있는지 모르겠다","","")
lang_add("You need to cook it before eating","먹기전에 요리해야 된다","","")
lang_add("Well-cooked pizza","잘 요리된 피자","","")
lang_add("Help you to stop bleeding","피 흘리는 것을 멈춰준다","","")
lang_add("Ready made meal","즉석 식품","","")
lang_add("Ready to eat","먹을 준비 되었습니다","","")
lang_add("Is it toxic?","독이 있을까?","","")
lang_add("Warm soup makes you calm down","따뜻한 스프가 당신을 차분히 만들어줍니다","","")
lang_add("Small red apple","작은 빨간 사과","","")
lang_add("Kind of berry","딸기의 일종","","")
lang_add("Basic craft desk. In order to make items","아이템을 만들기 위한 기본 작업대","","")
lang_add("Professional craft desk used to make advanced items","아이템을 만들기 위한 고급 작업대","","")
lang_add("Automatic gun machine used to defend the point","지점 방어를 위한 자동 총 기계","","")
lang_add("Flying turret. It will follow and protect you","날아다니는 터렛. 밤에 당신을 지켜줍니다","","")
lang_add("Elrectic lamp to provide light at night","밤에 불을 밝혀주는 전등","","")
lang_add("Flying lamp. It will follow you and provide powerful light","날아다니는 전등. 밤에 빛을 줍니다","","")
lang_add("Cells used to power electrical devices","전기 장치를 작동시키기 위한 건전지","","")
lang_add("Generating electricity by solar panels","태양광 패널을 사용하는 발전기","","")
lang_add("Device used to control a nuclear reaction. Permanent generator","방사능 물질을 사용하는 반영구적 발전기","","")
lang_add("Generator used to make electricity by using oil","기름을 사용하는 발전기","","")
lang_add("Wooden wall used to block the way","길을 막기 위한 나무 벽","","")
lang_add("Wooden door only for you. Zombies can't go through","좀비는 못 지나가는 나무 문","","")
lang_add("Steel wall used to block the way","길을 막기 위한 철 벽","","")
lang_add("Steel door only for you. Zombies can't go through","좀비는 못 지나가는 철 문","","")
lang_add("Fire that provides light and heat for cooking","불빛과 요리를 위한 열을 주는 불","","")
lang_add("Fire that provides light and heat for smelting","불빛과 제련을 위한 열을 주는 화로","","")
lang_add("Turret that uses electric shock to defend the point","지점 방어를 위해 전기를 사용하는 기계","","")
lang_add("Trap makes zombies slow down","좀비를 느리게 만들어주는 덫","","")
lang_add("Machine that generate GPS signal for you to find home","GPS 신호를 발생시켜 집을 찾게 해주는 기계","","")
lang_add("Electric cooker that provides heat for cooking","요리를 위한 전기렌지","","")
lang_add("Electric machine that provides heat for smelting","제련을 위한 전기화로","","")
lang_add("Handmade bicycle. Better than walking","수제 자전거. 걷는 것보다는 낫다","","")
lang_add("Powered by a motor, using oil","기름을 사용해 모터로 작동한다","","")
lang_add("Wood. Basic material","나무. 기본 재료","","")
lang_add("Stone. Basic material","돌. 기본 재료","","")
lang_add("Small piece that can be used to make steel","작은 철 조각. 철을 제련할 수 있다","","")
lang_add("Strong metal","강력한 금속","","")
lang_add("Small piece that can be used to make gold","작은 금 조각. 금을 제련할 수 있다","","")
lang_add("Shiny yellow metal","반짝거리는 노란 금속","","")
lang_add("Technical drawing","기술 그림","","")
lang_add("Parts of machine","기계의 일부분","","")
lang_add("Cell that can keep electricity","전기를 저장하는 건전지","","")
lang_add("Glass bulb inserted into a lamp or a socket","전등에 사용되는 전구","","")
lang_add("Explosive powder of mixture","폭발하는 혼합 가루","","")
lang_add("Fabric made from cotton","면으로 만들어진 천","","")
lang_add("Electronic device for processing data","정보를 처리하는 전기 장치","","")
lang_add("Circuit for making extremely high voltage","고전압을 만들기 위한 회로","","")
lang_add("Machine that converts power into motion","에너지를 운동으로 바꿔주는 장치","","")
lang_add("Flying robot","날아다니는 로봇","","")
lang_add("Can make items at night","밤에도 아이템을 만들 수 있다","","")
lang_add("Can make advanced items at night","밤에도 고급 아이템을 만들 수 있다","","")
lang_add("Material made from the skin of an animal","동물의 피부에서 얻은 가죽","","")
lang_add("Panel used to absorb the sunlight and generate electricity","태양광을 흡수해 전기를 만드는 패널","","")
lang_add("Material that has radioactive energy","방사능 에너지를 가진 물질","","")
lang_add("Ammo for rifle and pistol","라이플이나 권총을 위한 탄약","","")
lang_add("Ammo for shotgun","샷건을 위한 탄약","","")
lang_add("Ammo for machinegun","머신건을 위한 탄약","","")
lang_add("Arrow for bow","활을 위한 화살","","")
lang_add("Liquid for use as a fuel","연료로 사용되는 액체","","")
lang_add("Stinky rotten meat","냄새나는 썩은 고기","","")
lang_add("Device to find geographic position","위치를 찾아주는 기계장치","","")
lang_add("Pigeon to collect items","아이템을 수집해주는 비둘기","","")
lang_add("White pigeon to collect items","아이템을 수집해주는 흰 비둘기","","")
lang_add("Eagle to attack zombies","좀비를 공격하는 독수리","","")
lang_add("Dog to collect items and attack zombies","아이템을 수집하고 좀비를 공격하는 개","","")
lang_add("Santa costume","산타 복장","","")
lang_add("Zombie costume","좀비 복장","","")
lang_add("Cowboy costume","카우보이 복장","","")
lang_add("Shining golden axe","반짝거리는 금 도끼","","")
lang_add("Shining golden katana","반짝거리는 금 일본도","","")

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///lang skill
lang_add("Health","체력 증가","","")
lang_add("Recovery","회복력 증가","","")
lang_add("Knockback","근접 넉백","","")
lang_add("Melee damage","근접 데미지","","")
lang_add("Quick reload","빠른 재장전","","")
lang_add("Shooting skill","사격술","","")
lang_add("Robin Hood","로빈훗","","")
lang_add("Trot","빠른 걸음","","")
lang_add("Patience","인내심","","")
lang_add("Pickpocket","소매치기","","")
lang_add("Theif","도둑","","")
lang_add("Chef","요리사","","")
lang_add("Dwarf","드워프","","")
lang_add("Robotics","로봇공학","","")
lang_add("Engineering","전기공학","","")
lang_add("Cat","고양이","","")
lang_add("Nocturnal","야행성","","")
lang_add("Repairman","수리공","","")
lang_add("Move shooting","이동사격","","")
lang_add("Head shooter","헤드슈터","","")
lang_add("Poison immunity","독 면역력","","")

lang_add("Health increases","체력이 증가합니다","","")
lang_add("Recovery increases","회복력이 증가합니다","","")
lang_add("Knockback increases","근접 넉백이 증가합니다","","")
lang_add("Melee damage increases","근접 데미지가 증가합니다","","")
lang_add("Roload becomes faster","재장전이 빨라집니다","","")
lang_add("Accuracy improves","정확도가 향상됩니다","","")
lang_add("Bow accuracy improves","활 정확도가 향상됩니다","","")
lang_add("Speed increases","이동속도가 증가합니다","","")
lang_add("Hungry decreases","포만감 감소 속도가 줄어듭니다","","")
lang_add("Zombies drop more items","좀비가 아이템 드랍할 확률이 높아집니다","","")
lang_add("Find more items","맵 아이템 확률이 높아집니다","","")
lang_add("A chance to get more foods","일정 확률로 요리가 두배","","")
lang_add("A chance to get more metal","일정 확률로 제련이 두배","","")
lang_add("Turret reinforced","터렛이 강해집니다","","")
lang_add("Generator reinforced","발전효율과 배터리가 강화됩니다","","")
lang_add("Footsteps sound decreases","발소리가 감소합니다","","")
lang_add("Night vision increases","야간 시야가 증가합니다","","")
lang_add("Repair speed increases","설치물 수리속도가 증가합니다","","")
lang_add("Accuracy improves with moving","이동하면서 쏴도 에임이 그대로입니다","","")
lang_add("Able to shot heads","헤드샷을 쏠 수 있게됩니다","","")
lang_add("Get less damage from poison","독으로 부터 데미지를 덜 입는다","","")

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///in game setting
randomize()
device_mouse_dbclick_enable(false)

global.line_length = 300

global.item_respawn_time = 12 // in buildings

global.item_get_distance = 40

global.map_item_percent = 70
global.map_item_hit_time = 20

global.zombie_item_percent = 10

global.gui_aspect = 1

global.char_aspect = 1.2

global.save_file_name = "save"
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///setting
setting_load()
setting_save()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// audio
if !audio_group_is_loaded(ag_effect)
{
    audio_group_load(ag_effect);
}
if !audio_group_is_loaded(ag_bgm)
{
    audio_group_load(ag_bgm);
}

audio_group_set_gain(ag_effect,global.setting_sound_effect,0)
audio_group_set_gain(ag_bgm,global.setting_bgm,0)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// iap
iap_init()

iap_item_add("")
iap_item_add("100coins")
iap_item_add("300coins")
iap_item_add("600coins")
iap_item_add("1000coins")

iap_item_add("pigeon")
iap_item_add("whitepigeon")
iap_item_add("eagle")
iap_item_add("carolina")
iap_item_add("malamute")
iap_item_add("doberman")
iap_item_add("santa")
iap_item_add("zombie")
iap_item_add("cowboy")

iap_activate_auto()

iap_item_load()

iap_auto_consume = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// shop inven money
shop_inven_init()
global.goto_shop = 0

shop_db_add(0,"Starter pack",0,"Cotton clothes X 1#Axe X 1#Flashlight X 1",20)
shop_db_add(0,"Food aid",1,"Cooked meat X 3#Pizza X 3#Cooked meal X 3",20)
shop_db_add(0,"Emergency kit",2,"First aid kit X 2#Bandage X 3#Adrenaline X 2",30)
shop_db_add(0,"Basic craft kit",3,"Wood X 20#Cloth X 10#Stone X 20",10)
shop_db_add(0,"Pro craft kit",4,"Blueprint X 5#Steel X 20#Machine parts X 10",20)
shop_db_add(0,"Electric craft kit",5,"Battery X 5#Computer chip X 2#Bulb X 2",20)
shop_db_add(0,"Ammo craft kit",6,"Steel X 10#Gunpowder X 10",20)
shop_db_add(0,"Pigeon the bird",7,"Pigeon the bird X 1",10)
shop_db_add(0,"Carolina the dog",8,"Carolina the dog X 1",10)

shop_inven_load()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// lang shop

// name
lang_add("Starter pack","스타터 팩","","")
lang_add("Food aid","음식 지원","","")
lang_add("Emergency kit","응급 세트","","")
lang_add("Basic craft kit","기본 제작 세트","","")
lang_add("Pro craft kit","고급 제작 세트","","")
lang_add("Electric craft kit","전기 제작 세트","","")
lang_add("Ammo craft kit","탄약 제작 세트","","")
lang_add("Pigeon the bird","1회용 비둘기","","")
lang_add("Carolina the dog","1회용 캐롤라이나","","")

lang_add("5 coins","5 코인","","")
lang_add("100 coins","100 코인","","")
lang_add("300 + 30 coins","300 + 30 코인","","")
lang_add("600 + 100 coins","600 + 100 코인","","")
lang_add("1000 + 300 coins","1000 + 300 코인","","")
lang_add("Watch ads","광고 보기","","")
lang_add("Wait for ads","기다려주세요","","")

// explain
lang_add("Cotton clothes X 1#Axe X 1#Flashlight X 1","천 옷 X 1#도끼 X 1#손전등 X 1","","")
lang_add("Cooked meat X 3#Pizza X 3#Cooked meal X 3","요리된 고기 X 3#피자 X 3#조리된 식품 X 3","","")
lang_add("First aid kit X 2#Bandage X 3#Adrenaline X 2","응급 처치 키트 X 2#붕대 X 3#아드레날린 X 2","","")
lang_add("Wood X 20#Cloth X 10#Stone X 20","나무 X 20#천 X 10#돌 X 20","","")
lang_add("Blueprint X 5#Steel X 20#Machine parts X 10","설계도 X 5#철 X 20#기계부품 X 10","","")
lang_add("Battery X 5#Computer chip X 2#Bulb X 2","건전지 X 5#컴퓨터 칩 X 2#전구 X 2","","")
lang_add("Steel X 10#Gunpowder X 10","철 X 10#화약 X 10","","")
lang_add("Pigeon the bird X 1","1회용 비둘기 X 1","","")
lang_add("Carolina the dog X 1","1회용 캐롤라이나 X 1","","")
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// social gaming
rating_init()
rating_load()

if (os_type == os_android) 
{
}
if (os_type == os_ios)
{
    achievement_login();
}

achievement_init()

achievemnet_add(1,"CgkIg6_npp8FEAIQAg","first_installation")
achievemnet_add(1,"CgkIg6_npp8FEAIQAw","thomas_edison")
achievemnet_add(1000,"CgkIg6_npp8FEAIQBA","melee_weapons_expert")
achievemnet_add(200,"CgkIg6_npp8FEAIQBQ","bow_expert")
achievemnet_add(100,"CgkIg6_npp8FEAIQBg","collector")
achievemnet_add(200,"CgkIg6_npp8FEAIQBw","chef")
achievemnet_add(100,"CgkIg6_npp8FEAIQCA","blacksmith")
achievemnet_add(100,"CgkIg6_npp8FEAIQCQ","sniper")
achievemnet_add(1,"CgkIg6_npp8FEAIQCg","centipede_slayer")
achievemnet_add(1,"CgkIg6_npp8FEAIQCw","rafflesia_slayer")
achievemnet_add(1,"CgkIg6_npp8FEAIQDA","giant_slayer")
achievemnet_add(1,"CgkIg6_npp8FEAIQDQ","hedgehog_slayer")
achievemnet_add(500,"CgkIg6_npp8FEAIQDg","zombie_slayer")
achievemnet_add(100,"CgkIg6_npp8FEAIQDw","special_zombie_slayer")
achievemnet_add(100,"CgkIg6_npp8FEAIQEA","woods_collector")
achievemnet_add(1,"CgkIg6_npp8FEAIQEQ","good_day")
achievemnet_add(5000,"CgkIg6_npp8FEAIQEg","rider")
achievemnet_add(50,"CgkIg6_npp8FEAIQEw","never_die")
achievemnet_add(1,"CgkIg6_npp8FEAIQFA","ninja")
achievemnet_add(1,"CgkIg6_npp8FEAIQFQ","thanks")
achievemnet_add(50,"CgkIg6_npp8FEAIQFg","ads_addict")
achievemnet_add(1,"CgkIg6_npp8FEAIQFw","turret")

leaderboard_add("CgkIg6_npp8FEAIQGA","survival_days")
leaderboard_add("CgkIg6_npp8FEAIQGQ","levels")

achievement_load()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// unity ads

if (os_type == os_android) {
    unity_ads_init('1150782');
} else if (os_type == os_ios) {
    unity_ads_init('1150781');
}

unity_ads_set_test_mode(true);

global.unity_ads_time = date_current_datetime()
unity_ads_time_load()
unity_ads_time_save()

global.unity_ads_time_gap = 60*4
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// tip
tip_init()

tip_add("You'd better make the fire before the night comes","밤이 오기 전에 불을 피우는 게 좋습니다","","")
tip_add("Make your shelter to stay in during the night","바리케이트와 문으로 밤을 지낼 은신처를 만드세요","","")
tip_add("Zombies will be getting stronger as the day goes on","좀비들은 날이 지날수록 강해지고 더 많이 나옵니다","","")
tip_add("If you be careful of footsteps and gunshot, you could avoid zombies attention","낮에는 발소리와 총소리를 조심하면 좀비의 관심을 안 끌 수 있습니다","","")
tip_add("At night zombies know where you are","밤에는 좀비들이 당신의 위치를 알게 됩니다 조심하세요","","")
tip_add("On a rainy day zombies know where you are even in the day time","비 오는 날에는 낮에도 좀비들이 당신의 위치를 알게 됩니다","","")
tip_add("Collect as many as you can during the day","낮에는 최대한 보급품 아이템을 많이 모으세요","","")
tip_add("If you stomach is empty, your health point would go down","포만감이 0이 되면 체력이 감소합니다 굶지마세요","","")
tip_add("Bosses appear somewhere in the town","맵 곳곳에 보스가 출몰하는 장소가 있습니다","","")
tip_add("Kill bosses and get special items","보스를 잡으면 특별한 아이템을 얻을 수 있습니다","","")
tip_add("Watch advertisement and get extra items","광고를 보면 생존에 필요한 여분의 보급품 아이템을 받을 수 있습니다","","")
tip_add("Find nice items in the shop","상점에서 파는 다양한 아이템을 확인해 보세요","","")
tip_add("If you die, you could continue playing but need to pay","코인으로 부활할 수 있으나 부활 횟수에 따라 가격이 올라갑니다","","")
tip_add("Craft items on the craft desk or in the bag","가방이나 작업대에서 아이템을 제작해보세요","","")
tip_add("You can cook on the campfire","캠프파이어로 일부 음식 아이템을 요리할 수 있습니다","","")
tip_add("You can smelt metal on the brazier","화로로 일부 금속 아이템을 제련할 수 있습니다","","")
tip_add("At night there are three zombie waves","밤에는 좀비들이 몰려오는 세 번의 wave가 있습니다","","")
tip_add("Each melee weapon has different range and speed","근접무기 마다 사거리와 공격속도가 다릅니다","","")
tip_add("You can collect wood faster with a axe or a saw","도끼나 톱으로 나무를 더 빠르게 채집 가능합니다","","")
tip_add("Bows are quiet useful during the day","활은 소리가 나지 않아 낮에 유용합니다 화살은 회수가 가능합니다","","")
tip_add("Do you get lost? Use the compass or GPS machin","방향감각을 잃으셨나요 나침반이나 GPS 장치를 사용해보세요","","")
tip_add("Knowing the time is important. Make a watch","시간을 아는 것은 중요합니다 시계를 만드세요","","")
tip_add("Each building has different spawning items","건물의 종류에 따라 나오는 아이템이 조금씩 다릅니다","","")
tip_add("Every item purchased with coins is consumable so it will disappear when game over","코인으로 구매하는 아이템들은 모두 소모성 아이템으로 한 게임이 끝나면 사라집니다","","")
tip_add("You can move faster on bicycle or motorcycle","자전거나 오토바이를 이용해 빠르게 이동할 수 있습니다","","")
tip_add("You can modify the controller on the setting menu","조작이 불편하신가요 설정에서 컨트롤러를 수정 가능합니다","","")
tip_add("Every electric installation needs a battery connected to a generator","모든 전기 설치물들은 발전기가 연결된 배터리가 필요합니다","","")

tip_shuffle()
tip_string()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// push
push_clear()
push_push()

re_push_time = 30*10
alarm[0] = re_push_time

push_money = 0
push_money_save = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>push_clear()
push_push()
alarm[0] = re_push_time
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// iap consume
if room != rom_play
{
    iap_consume_auto()
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// bgm
if room == rom_credits
{
    if !audio_is_playing(bgm_credits)
    {
        audio_play_sound(bgm_credits,0,1)
    }
}
else
{
    audio_stop_sound(bgm_credits)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// rating
rating_cal()

if room == rom_lobby
{
    if global.rating_time &lt; 0
    {
        if global.rating_finish == 0
        {
            if !instance_exists(par_popup)
            {
                rating_reset()
                instance_create(0,0,obj_rating_popup)
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// push money
if push_money_save
{
    if room == rom_lobby
    {
        global.money += push_money
        shop_inven_save()
        push_money_save = 0
        
        if push_money == 10
        {
            if lang_type_get() == 0
            {
                lobby_message_type("Rewarded, 10 coins")
            }
            else
            {
                lobby_message_type("보상, 10 코인")
            }
        }
        if push_money == 40
        {
            if lang_type_get() == 0
            {
                lobby_message_type("Rewarded, 40 coins")
            }
            else
            {
                lobby_message_type("보상, 40 코인")
            }
        }
        if push_money == 100
        {
            if lang_type_get() == 0
            {
                lobby_message_type("Rewarded, 100 coins")
            }
            else
            {
                lobby_message_type("보상, 100 코인")
            }
        }
        push_money = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="71">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var type = ds_map_find_value(async_load, "type");
var status = ds_map_find_value(async_load, "status");
if status == 0
{
    //error of some kind
}
else
{
    if type == "register"
    {}
    else
    {
        var data = ds_map_find_value(async_load, "data");
        if data == "1day"
        {
            push_money = max(10,push_money);
            push_money_save = 1
        }
        if data == "3days"
        {
            push_money = max(40,push_money);
            push_money_save = 1
        }
        if data == "7days"
        {
            push_money = max(100,push_money);
            push_money_save = 1
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var val = ds_map_find_value(iap_data, "type");

if val == iap_ev_purchase
{
    var map = ds_map_create();
    var purchase_id = ds_map_find_value(iap_data, "index");
    
    iap_purchase_details(purchase_id, map);
    
    if (ds_map_find_value(map, "status") == iap_purchased)
    {
        var product_id = ds_map_find_value(map, "product");
        
        
        switch(product_id)
        {
            case "100coins": iap_save_purchase(product_id); iap_consume(product_id); break;
            case "300coins": iap_save_purchase(product_id); iap_consume(product_id); break;
            case "600coins": iap_save_purchase(product_id); iap_consume(product_id); break;
            case "1000coins": iap_save_purchase(product_id); iap_consume(product_id); break;
            
            case "pigeon": iap_item_get(5); break;
            case "whitepigeon": iap_item_get(6); break;
            case "eagle": iap_item_get(7); break;
            case "carolina": iap_item_get(8); break;
            case "malamute": iap_item_get(9); break;
            case "doberman": iap_item_get(10); break;
            case "santa": iap_item_get(11); break;
            case "zombie": iap_item_get(12); break;
            case "cowboy": iap_item_get(13); break;
        }

        iap_item_save()
    }
    if (ds_map_find_value(map, "status") == iap_available)
    {}
    if (ds_map_find_value(map, "status") == iap_failed)
    {}    
    if (ds_map_find_value(map, "status") == iap_canceled)
    {}
    if (ds_map_find_value(map, "status") == iap_refunded)
    {}
    ds_map_destroy(map);
}

if val == iap_ev_restore
{
    if ds_map_find_value(iap_data, "result")
    {
        show_message_async("Restore success")
    }
    else
    {
        show_message_async("Restore failure")
    }
}

if val == iap_ev_consume
{
    if ds_map_find_value(iap_data, "consumed")
    {
        var product_id = ds_map_find_value(iap_data, "product");
        
        switch(product_id)
        {
            case "100coins": global.money += 100; break;
            case "300coins": global.money += 330; break;
            case "600coins": global.money += 700; break;
            case "1000coins": global.money += 1300; break;
        }
        iap_save_consume(product_id)
        shop_inven_save()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>db_free()
rpg_free()
item_free()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// rating save
rating_save()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.money +=1000
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
