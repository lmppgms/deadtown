<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shop_item_slot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>item_slot_index = 0

item_index = 0
item_type = 0
item_name = ""
item_image_index = 0
item_explain = ""
item_price = 0

item_product_id = ""

last_mouse_x = 0
last_mouse_y = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0
image_index = 0
if item_type == 1 or item_type == 2
{image_index = 2}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xx = 230 + 40 + 240/2 + floor(item_slot_index/2)*(240+30) + sys_shop.drag_x
yy = 64 + 110 + 24 + 160/2 + (item_slot_index mod 2)*(160+24)

x = xx
y = yy
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(par_popup)
{
    if point_distance(last_mouse_x,last_mouse_y,mouse_x,mouse_y) &lt; 20
    {
        if item_type == 1 or item_type == 2
        {
            if item_index == 0
            {
                if global.unity_ads_time_gap &lt;= date_second_span(global.unity_ads_time,date_current_datetime())
                {
                    if unity_ads_check_is_can_show()
                    {
                        unity_ads_show_scr()
                        
                        instance_create(0,0,par_popup)
                        
                        global.unity_ads_time = date_current_datetime();
                        unity_ads_time_save();
                    }
                }
            }
            else
            {
                if iap_status() == iap_status_available
                {
                    if item_product_id != ""
                    {
                        iap_acquire(item_product_id, "");
                    }
                }
                else
                {}
            }
        }
        else
        {
            ins = instance_create(0,0,obj_shop_popup)
            ins.item_index = item_index
            ins.item_type = item_type
            ins.item_name = item_name
            ins.item_image_index = item_image_index
            ins.item_explain = item_explain
            ins.item_price = item_price
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>last_mouse_x = mouse_x
last_mouse_y = mouse_y

if !instance_exists(par_popup)
{
    audio_play_sound(snd_button_click,0,0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(par_popup)
{
    image_index = 1
    if item_type == 1 or item_type == 2
    {image_index = 3}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

if item_type == 0
{
    draw_sprite(spr_shop_item,item_image_index,x,y-10)
    
    draw_set_alpha(0.8)
    draw_set_halign(fa_center)
    draw_set_valign(fa_right)
    
    draw_set_colour(c_white)
    draw_text_transformed_border(x+120-35,y+30,"1X "+string(global.shop_db[item_index,5]),0.7,0.7,0)
    
    draw_set_halign(fa_center)
    draw_set_valign(fa_middle)
    draw_text_transformed_border(x,y-65,lang_get(item_name),0.7,0.7,0)
    draw_set_colour(c_black)
    draw_text(x,y+58,string(item_price))
    draw_set_alpha(1)
    draw_set_halign(fa_left)
    draw_set_valign(fa_top)
}
else if item_type == 1
{
    draw_sprite(spr_iap_item,item_index,x,y-10)
    
    draw_set_alpha(0.8)
    draw_set_halign(fa_center)
    draw_set_valign(fa_right)
    
    draw_set_colour(c_white)
    draw_text_transformed_border(x+120-35,y+30,"âˆžX "+string(global.iap_purchase_info[item_index,0]),0.7,0.7,0)
    
    draw_set_halign(fa_center)
    draw_set_valign(fa_middle)
    draw_text_transformed_border(x,y-65,lang_get(item_name),0.7,0.7,0)
    draw_set_colour(c_black)
    draw_text(x,y+58,string(item_price))
    draw_set_alpha(1)
    draw_set_halign(fa_left)
    draw_set_valign(fa_top)
}
else
{
    draw_sprite(spr_iap_item,item_index,x,y-10)
    draw_set_alpha(0.8)
    draw_set_halign(fa_center)
    draw_set_valign(fa_middle)
    
    draw_set_colour(c_white)
    draw_text_transformed_border(x,y-65,lang_get(item_name),0.7,0.7,0)
    draw_set_colour(c_black)
    
    draw_text(x,y+58,string(item_price))
    
    if item_index == 0
    {
        if global.unity_ads_time_gap &gt; date_second_span(global.unity_ads_time,date_current_datetime())
        {
            gap = global.unity_ads_time_gap - date_second_span(global.unity_ads_time,date_current_datetime())
            gap_min = floor(gap/60)
            gap_sec = floor(gap - gap_min*60)
            
            gap_min_str = string(gap_min)
            if string_length(string(gap_sec)) == 1
            {gap_sec_str = "0"+string(gap_sec)}
            else
            {gap_sec_str = string(gap_sec)}
            
            draw_text(x,y+58,gap_min_str+":"+gap_sec_str)
            //draw_text(x,y+58,string(gap))
        }
        else
        {
            if unity_ads_check_is_can_show()
            {
                draw_text(x,y+58,lang_get("Watch ads"))
            }
            else
            {
                draw_text(x,y+58,lang_get("Wait for ads"))
            }
        }
    }
    if item_index == 2
    {
        if lang_type_get() == 0
        {
            draw_sprite(spr_shop_slot_deco,0,x+110,y-10)
        }
        else
        {
            draw_sprite(spr_shop_slot_deco,2,x+110,y-10)
        }
    }
    if item_index == 4
    {
        if lang_type_get() == 0
        {
            draw_sprite(spr_shop_slot_deco,1,x+110,y-10)
        }
        else
        {
            draw_sprite(spr_shop_slot_deco,3,x+110,y-10)
        }
    }
    
    draw_set_alpha(1)
    draw_set_halign(fa_left)
    draw_set_valign(fa_top)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
